{"version":3,"sources":["Component/Main/Main/Main.module.css","Component/Main/Main/Post/Post.module.css","Component/Main/Dialogs/Dialogs.module.css","Component/Main/Users/Users.module.css","Component/Main/Login/Login.module.css","logo.svg","utils/validators/validators.js","Component/Header/Header.jsx","Component/Main/Main/Post/Post.jsx","common/Preloader.jsx","Component/Main/Main/Status/Status.jsx","Component/Main/Main/Status/StatusWithHook.jsx","Component/Main/Main/Main.jsx","Component/Footer/Footer.jsx","Component/Main/Dialogs/Me/Me.jsx","Component/Main/Dialogs/Message/Message.jsx","Component/Main/Dialogs/Dialogs.jsx","api/api.js","utils/objectHelplers.js","Redux/Reducers/UsersReducer.js","Redux/ActionTypes.js","Redux/Reducers/ProfileReducer.js","Component/Main/Main/MainContainer.jsx","Component/Main/Users/User.jsx","common/Paginator/Paginator.jsx","Component/Main/Users/Users.jsx","hoc/withAuthRedirect.jsx","Redux/Reducers/usersSelectors.js","Component/Main/Users/UsersContainer.jsx","Redux/Reducers/AuthReducer.js","Component/Header/HeaderContaine.jsx","common/FormConrols/FormsControls.js","Component/Main/Login/Login.jsx","Redux/Reducers/AppReducer.js","App.js","serviceWorker.js","Redux/ReduxStore.jsx","index.js","Component/Header/Header.module.css","Component/Footer/Footer.module.css","Component/Main/Dialogs/Message/Message.module.css","common/FormConrols/FormsControls.module.css","Component/Main/Dialogs/Me/Me.module.css","common/Paginator/Paginator.module.css"],"names":["module","exports","maxaValue","Header","props","className","s","header","to","activeClassName","active","isAuth","auth","login","src","photo","alt","logout","onClick","console","log","alert","Post","name","imgAva","img","text","Preloader","React","Component","required","value","StatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","maxLength","length","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Main","PostElement","profilePage","map","p","key","id","content","isFetching","updateStatusThunk","postData","addPost","newPostBody","Footer","footer","imgMessages","Me","me","nameme","nameUser","Dialogs","dialogs","dilogsItems","dialog","messages","Message","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","userID","post","resultCode","unfollowUser","delete","authAPI","email","password","rememberMe","profileAPI","put","updateObjectInArray","items","itemId","objPropName","newObjectProps","u","initialState","users","totalUsers","isDisabled","setUsers","type","SET_USERS","follow","FOLLOW_USER","unfollow","UNFOLLOW_USER","bool","IS_DISABLED","IS_FETCHING","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","UsersPageReducer","state","action","followed","totalCount","filter","ADD_NEW_POST_TEXT","setPhotoUser","setStatusUser","getStatusThunk","ProfilePageReducer","newPostText","MainContainer","this","match","params","getProfileThunk","compose","connect","AuthPageReducer","photos","large","withRouter","User","disabled","Disabled","some","unfUser","fUser","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","cn","selectedPage","pageNumber","Users","followUserThunk","unfollowUserThunk","onPageChangedThunk","mapStateToProps","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getDisabled","UsersContainer","getUserAC","bind","RedirectComponent","setUserData","payload","authmeThunk","HeaderContainer","Input","input","meta","hasError","touched","error","formControl","LoginReduxForm","style","formSummaryError","setDataLoginThunk","message","stopSubmit","_error","formData","Login","Password","initialized","AppReducer","App","initializeApp","HeaderContaine","path","render","promise","Promise","all","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5c1191df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__3Bs3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgAva\":\"Post_imgAva__17ww0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content___OaR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Users_content__19OzP\",\"selectedPage\":\"Users_selectedPage__1q73A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__SpNzn\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Поле обязательное для ввода!\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxaValue) => (value) => {\r\n    if ( value.length > maxaValue) return `Максимальное значение ${maxaValue} символов!`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    const logout = () => {\r\n        props.logout(false);\r\n        console.log(props.isAuth)\r\n    };\r\n\r\n\r\n    const hello = () => {\r\n        alert(props.isAuth)\r\n    };\r\n    return (\r\n        <header className={s.header}>\r\n\r\n            <NavLink to=\"/profile\" activeClassName={s.active} >Моя страница</NavLink>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active} >Сообщения</NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active} >Пользователи</NavLink>\r\n\r\n           {props.isAuth\r\n               ? <div className={s.auth}>{props.login} <img src={!props.photo\r\n                   ? 'https://avatars.yandex.net/get-music-content/175191/f26e7e1a.p.5821649/m1000x1000'\r\n                   : props.photo} alt=\"\"/> <NavLink to={\"/login\"} className={s.logout} onClick={logout}>Выйти</NavLink>\r\n\r\n           </div>\r\n               : <div className={s.auth}>Войдите</div> }\r\n            <button onClick={hello} >HHH</button>\r\n\r\n        </header>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <div> {props.name} </div>\r\n                <img className={s.imgAva} src={props.img} alt={props.name} />\r\n                 {props.text}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nconst Preloader = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Загрузка...</h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from \"react\";\r\n\r\nclass Status extends React.Component {\r\n\r\n    state = {\r\n        editMode:false,\r\n        status: this.props.status\r\n    };\r\n\r\n    activateEditeMode = () => {\r\n      this.setState({\r\n          editMode:true\r\n      })\r\n    };\r\n\r\n    deactivateEditeMode = () => {\r\n        this.setState({\r\n            editMode:false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status:e.currentTarget.value\r\n\r\n    })\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status:this.props.status\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.editMode\r\n                ? <div><input onChange={this.onStatusChange}  onBlur={this.deactivateEditeMode} autoFocus={true} value={this.state.status} /></div>\r\n                : <div onClick={this.activateEditeMode} >Status:{this.props.status || <span>3% </span> }</div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Status","import React, {useEffect, useState} from \"react\";\r\n\r\nconst StatusHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const activateEditeMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ? <div><input onChange={onStatusChange} onBlur={deactivateEditeMode}\r\n                                                                 autoFocus={true} value={status} /></div>\r\n                : <div onClick={activateEditeMode}>Status:{props.status || <span>3% </span>}</div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default StatusHook;","import React from 'react';\r\nimport s from './Main.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport Status from \"./Status/Status\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport StatusHook from \"./Status/StatusWithHook\";\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    let PostElement = props.profilePage.map ( p => <Post img={p.img} text={p.text} key={p.id} name={p.name} />  );\r\n\r\n\r\n    const addNewPost = (postData) => {\r\n       props.addPost(postData.newPostBody)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            {props.isFetching ? <Preloader />\r\n            : <img src={!props.photo ? 'https://img8.eadaily.com/r650x450/o/7ac/95f49146b4501082acd22918d4cc2.jpg' : props.photo}\r\n                   alt=\"\"/>\r\n            }\r\n            <StatusHook status={props.status} updateStatus={props.updateStatusThunk} />\r\n\r\n            <AddPostFormRedux onSubmit={addNewPost} />\r\n            {PostElement}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst maxLength = maxLengthCreator(300);\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n\r\n\r\n    return(\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field component={\"textarea\"} name={\"newPostBody\"} placeholder={\"Написать пост\"}\r\n                       validate={[required, maxLength]} />\r\n                <button  >Отрправить </button>\r\n            </form>\r\n\r\n        )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form:\"postAddPostForm\"})(AddPostForm);\r\n\r\n\r\n\r\nexport default Main;","import React from 'react';\r\nimport s from './Footer.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <NavLink to=\"/profile\" activeClassName={s.active}><img className={s.img} src=\"https://cdn4.iconfinder.com/data/icons/evil-icons-user-interface/64/avatar-512.png\" alt=\"Profile\"/></NavLink>\r\n\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}><img className={s.imgMessages} src=\"https://www.logolynx.com/images/logolynx/75/75189e2b07df0d2a8cc42dee4cf889b7.png\" alt=\"messages\"/></NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active}><img className={s.img} src=\"https://icons.iconarchive.com/icons/custom-icon-design/pretty-office-13/512/Users-icon.png\" alt=\"\"/>\r\n            </NavLink>\r\n        </footer>\r\n\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport s from './Me.module.css'\r\n\r\nconst Me = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.me} id=\"navbar\">\r\n            <div className={s.nameme}> Вы хххх </div>\r\n            <img src=\"https://media.vanityfair.com/photos/5c5325d33889055ec0570bcf/master/pass/t-ava-max-interview.jpg\" alt=\"\"/>\r\n            <div className={s.nameUser}> Пользователь </div>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQiTFKqGQSmNR0oBxxx7XkVRlO_OijvVdh6n7RRyp1fWsKoFPSQ&usqp=CAU\" alt=\"\"/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Me;","import React from 'react';\r\nimport s from './Message.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dilogsItems}>\r\n                <div className={s.dialog}>\r\n                   <NavLink to=\"/dialogs/1\" >Dima</NavLink>\r\n                </div>\r\n                <div className={s.dialog}>\r\n                    <NavLink to=\"/dialogs/2\" >Sasha</NavLink>\r\n                </div>\r\n                <div className={s.dialog}>\r\n                    <NavLink to=\"/dialogs/3\" >Sveta</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.dialog}>ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd</div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Me from \"./Me/Me\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <Me />\r\n            <Message />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import * as axios from \"axios\";\r\n\r\n//let URL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"be820c73-af0b-4ffa-9553-5bd0d04425d6\"\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    followUser(userID) {\r\n        return instance.post(`follow/${userID}`).then(response => {\r\n            return response.data.resultCode\r\n        })\r\n    },\r\n    unfollowUser(userID) {\r\n        return instance.delete(`follow/${userID}`).then(response => {\r\n            return response.data.resultCode\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const authAPI  = {\r\n    authme() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login` , {email, password, rememberMe} )\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\n\r\nexport const profileAPI = {\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`).then (response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfile(userID){\r\n        return instance.get(`profile/${userID}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateStatus(setStatus) {\r\n        return instance.put(`profile/status`, {status: setStatus}).then(response =>{\r\n            return response\r\n        })\r\n    }\r\n};","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {userAPI} from \"../../api/api\";\r\nimport {updateObjectInArray} from \"../../utils/objectHelplers\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isDisabled: [],\r\n};\r\n\r\n\r\nconst UsersPageReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID,\"id\" ,{followed:true})\r\n/*\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n*/\r\n            };\r\n        case UNFOLLOW_USER: {\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users, action.userID,\"id\" ,{followed:false} )\r\n/*\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n*/\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalCount\r\n            }\r\n        }\r\n/*        case IS_FETCHING_TRUE: {\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        }\r\n        case IS_FETCHING_FALSE: {\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        }*/\r\n        case IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.bool\r\n            }\r\n        }\r\n        case IS_DISABLED: {\r\n            return {\r\n                ...state,\r\n                isDisabled: action.bool\r\n                    ? [...state.isDisabled, action.id]\r\n                    : state.isDisabled.filter(id => id != action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrent = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const isFetchingTrue = () => ({type: IS_FETCHING_TRUE});\r\nexport const isFetchingFalse = () => ({type: IS_FETCHING_FALSE});\r\nexport const follow = (userID) => {\r\n    return {\r\n        type: FOLLOW_USER,\r\n        userID\r\n    }\r\n};\r\nexport const unfollow = (userID) => {\r\n    return {\r\n        type: UNFOLLOW_USER,\r\n        userID\r\n    }\r\n};\r\nexport const isDisabled = (bool, id) => {\r\n    return ({type: IS_DISABLED, bool, id})\r\n};\r\nexport const isFetching = (bool) => ({type: IS_FETCHING, bool });\r\n\r\n\r\nexport const SET_USERS = \"SET_USERS\";\r\n\r\nconst FOLLOW_USER = \"FOLLOW_USER\";\r\nconst UNFOLLOW_USER = \"UNFOLLOW_USER\";\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst IS_FETCHING_TRUE = 'IS_FETCHING_TRUE';\r\nconst IS_FETCHING_FALSE = 'IS_FETCHING_FALSE';\r\nconst IS_DISABLED = 'IS_DISABLED';\r\nconst IS_FETCHING = 'IS_FETCHING'\r\n\r\nexport const getUserAC = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        //dispatch(isFetchingTrue());\r\n        dispatch(isFetching(true));\r\n        let response = await userAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount));\r\n        //dispatch(isFetchingFalse());\r\n        dispatch(isFetching(false))\r\n    }\r\n};\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator ) => {\r\n    dispatch(isDisabled(true, id));\r\n    let response = await apiMethod(id);\r\n    if (response == 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(isDisabled(false, id))\r\n};\r\nexport const followUserThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userAPI.followUser.bind(userAPI);\r\n    let actionCreator = follow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n};\r\nexport const unfollowUserThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userAPI.unfollowUser.bind(userAPI);\r\n    let actionCreator = unfollow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n};\r\n\r\nexport const onPageChangedThunk = (pageNumber, pageSize) => async (dispatch) => {\r\n    //dispatch(isFetchingTrue());\r\n    dispatch(isFetching(true));\r\n    dispatch(setCurrent(pageNumber));\r\n    let response = await userAPI.getUsers(pageNumber, pageSize);\r\n    dispatch(setUsers(response.items));\r\n    //dispatch(isFetchingFalse());\r\n    dispatch(isFetching(false))\r\n};\r\n\r\nexport default UsersPageReducer;","import {SET_USERS} from \"./Reducers/UsersReducer\";\r\n\r\n\r\n\r\nexport const ADD_NEW_POST_TEXT = (text) => {\r\n    return {\r\n        type: ADD_NEW_POST_TEXT,\r\n        text\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};","import {ADD_NEW_POST_TEXT} from \"../ActionTypes\";\r\nimport {  profileAPI} from \"../../api/api\";\r\nimport {isFetching, isFetchingFalse, isFetchingTrue} from \"./UsersReducer\";\r\n\r\nconst SET_STATUS_USER = \"SET_STATUS_USER\";\r\n\r\nconst SET_PHOTO_USER = 'SET_PHOTO_USER';\r\nlet initialState = {\r\n\r\n    profilePage:[\r\n        {\r\n            id:1,\r\n            text: \"Привет\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        },\r\n        {\r\n            id:2,\r\n            text: \"Как дела?\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        },\r\n        {\r\n            id:3,\r\n            text: \"Что нового?\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        }\r\n    ],\r\n    photo:'',\r\n    status:\"\",\r\n};\r\n\r\nconst ProfilePageReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST_TEXT: {\r\n\r\n            let newPostText = {\r\n                id:5,\r\n                text:action.text,\r\n                name: \"Валерий Цепкало\",\r\n                img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n            };\r\n            return {\r\n                ...state,\r\n                profilePage: [...state.profilePage, newPostText],\r\n                newPostText: action.text,\r\n\r\n            }\r\n        }\r\n        case SET_PHOTO_USER: {\r\n            return {\r\n                ...state,\r\n                photo:action.photo\r\n            }\r\n        }\r\n        case SET_STATUS_USER: {\r\n            return {\r\n                ...state,\r\n                status:action.status\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport const setPhotoUser = (photo) => ({type: SET_PHOTO_USER, photo});\r\nexport const setStatusUser = (status) => ({type: SET_STATUS_USER, status});\r\n\r\nexport const getStatusThunk = (status) => async (dispatch) => {\r\n        let response = await profileAPI.getStatus(status);\r\n            dispatch(setStatusUser(response))\r\n};\r\n\r\nexport const getProfileThunk = (userID) => async (dispatch) => {\r\n            //dispatch(isFetchingTrue());\r\n            dispatch(isFetching(true));\r\n            let response = await profileAPI.getProfile(userID);\r\n            dispatch(setPhotoUser(response.photos.large));\r\n            dispatch(getStatusThunk(userID));\r\n            //dispatch(isFetchingFalse());\r\n            dispatch(isFetching(false))\r\n};\r\n\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatusUser(status))\r\n            }\r\n};\r\n\r\n\r\nexport default ProfilePageReducer;","import {connect} from \"react-redux\";\r\nimport React from 'react'\r\n\r\nimport Main from \"./Main\";\r\nimport {ADD_NEW_POST_TEXT,} from \"../../../Redux/ActionTypes\";\r\nimport {\r\n    getProfileThunk,\r\n    setPhotoUser,\r\n\r\n   updateStatusThunk\r\n} from \"../../../Redux/Reducers/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID;\r\n            if (!userID) {\r\n                userID = this.props.id\r\n            }\r\n        this.props.getProfileThunk(userID)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Main {...this.props} />\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    profilePage:state.ProfilePageReducer.profilePage,\r\n    newPostText:state.ProfilePageReducer.newPostText,\r\n    photo: state.ProfilePageReducer.photo,\r\n    isFetching: state.UsersPageReducer.isFetching,\r\n    status:state.ProfilePageReducer.status,\r\n    id:state.AuthPageReducer.id\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(newPostBody) => {\r\n            dispatch(ADD_NEW_POST_TEXT(newPostBody))\r\n        },\r\n        setPhotoUser:(photo) => {\r\n            dispatch(setPhotoUser(photo))\r\n        },\r\n        getProfileThunk: (id) => {\r\n            dispatch(getProfileThunk(id))\r\n        },\r\n        updateStatusThunk: (status) => {\r\n            dispatch(updateStatusThunk(status))\r\n        }\r\n    }\r\n};\r\n\r\n/*let withAuthRedirectCC = withAuthRedirect(MainContainer)\r\n\r\nlet withURLDataContainerComponent = withRouter (withAuthRedirectCC);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withURLDataContainerComponent);*/\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(MainContainer)","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div >\r\n            <NavLink to={\"/profile/\" + props.u.id}>\r\n                {props.u.name}\r\n                <div><img\r\n                    src={!props.u.photos.large ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1200px-VK.com-logo.svg.png' : props.u.photos.large}\r\n                    alt={props.u.name}/></div>\r\n            </NavLink>\r\n            {props.u.followed\r\n                ? <button disabled={props.Disabled.some(id => id === props.u.id)}\r\n                          onClick={() => props.unfUser(props.u.id) }> Отписаться </button>\r\n                : <button disabled={props.Disabled.some(id => id === props.u.id)}\r\n                          onClick={ () => props.fUser(props.u.id) }> Подписаться </button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React, {useState} from 'react'\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i =1; i<= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\ndebugger\r\n     return <div className={s.paginator}>\r\n        <button disabled={portionNumber <= 1} onClick={() => { setPortionNumber(portionNumber - 1) }}>Предыдущие</button>\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        <button disabled={portionCount <= portionNumber} onClick={() => { setPortionNumber(portionNumber + 1) }}>Следующие</button>\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css'\r\n\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport User from \"./User\";\r\nimport Paginator from \"../../../common/Paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n\r\n    let fUser = (id) => {\r\n        props.followUserThunk(id);\r\n    };\r\n    let unfUser = (id) => {\r\n    props.unfollowUserThunk(id)\r\n    };\r\n   let onPageChanged = (pageNumber) => {\r\n        props.onPageChangedThunk(pageNumber, props.pageSize)\r\n    };\r\n\r\n    return (\r\n        <div className={s.content}>\r\n\r\n            { props.isFetching ? <Preloader/>\r\n            : <div>\r\n                    <Paginator currentPage={props.currentPage} onPageChanged={onPageChanged}\r\n                               totalItemsCount={props.totalItemsCount} pageSize={props.pageSize}/>\r\n                    {props.users.map(u =>\r\n                        <User u={u} Disabled={props.Disabled} unfUser={unfUser} fUser={fUser} key={u.id} />\r\n                       /* <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            {u.name}\r\n                            <div><img\r\n                                src={!u.photos.large ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1200px-VK.com-logo.svg.png' : u.photos.large}\r\n                                alt={u.name}/></div>\r\n                            </NavLink>\r\n                            {u.followed\r\n                                ? <button disabled={props.Disabled.some(id => id === u.id)}\r\n                                    onClick={() => unfUser(u.id) }> Отписаться </button>\r\n                                : <button disabled={props.Disabled.some(id => id === u.id)}\r\n                                    onClick={ () => fUser(u.id) }> Подписаться </button>}\r\n                        </div>*/\r\n                    )\r\n                    }\r\n                </div>}\r\n{/*        <div>\r\n            {pages}\r\n        </div>*/}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Users;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" /> ;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectAuthRedirectComponent;\r\n};\r\n\r\n\r\n","export const getUsers = (state) => {\r\n    return state.UsersPageReducer.users;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPageReducer.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPageReducer.totalUsers\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPageReducer.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPageReducer.isFetching;\r\n};\r\nexport const getDisabled = (state) => {\r\n    return state.UsersPageReducer.isDisabled;\r\n};","import {connect} from \"react-redux\";\r\nimport React from \"react\"\r\nimport Users from \"./Users\";\r\nimport {\r\n    followUserThunk, getUserAC,\r\n   onPageChangedThunk,\r\n    unfollowUserThunk\r\n} from \"../../../Redux/Reducers/UsersReducer\";\r\nimport {userAPI} from \"./../../../api/api\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getDisabled,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../../Redux/Reducers/usersSelectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n            this.props.getUserAC(this.props.currentPage, this.props.pageSize);\r\n            };\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsers/this.props.pageSize);\r\n        let pages = [];\r\n        for (let i =1; i<= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n        return (\r\n             <Users {...this.props}  pages={pages} followUser={userAPI.followUser} unfollowUser={userAPI.unfollowUser}\r\n                    currentPage={this.props.currentPage} totalItemsCount={this.props.totalUsers} pageSize={this.props.pageSize}/>\r\n            )\r\n\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.UsersPageReducer.users,\r\n        pageSize: state.UsersPageReducer.pageSize,\r\n        totalUsers: state.UsersPageReducer.totalUsers,\r\n        currentPage:state.UsersPageReducer.currentPage,\r\n        isFetching: state.UsersPageReducer.isFetching,\r\n        Disabled:state.UsersPageReducer.isDisabled,\r\n\r\n    }\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        Disabled:getDisabled(state),\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserAC,\r\n        followUserThunk,\r\n        unfollowUserThunk,\r\n        onPageChangedThunk,\r\n    }\r\n    ),\r\n    withAuthRedirect,\r\n)(UsersContainer)\r\n\r\n/*\r\nexport default withAuthRedirect(connect(mapStateToProps, {\r\n    getUserAC,\r\n    followUserThunk,\r\n    unfollowUserThunk,\r\n    onPageChangedThunk,\r\n    }\r\n)(UsersContainer));*/\r\n","import {authAPI, authme} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id:null,\r\n    email:null,\r\n    login:null,\r\n    isAuth:false,\r\n    password:null,\r\n    rememberMe:null,\r\n};\r\n\r\nconst AuthPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default: return state\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type:SET_USER_DATA, payload:{id, email, login, isAuth} });\r\n\r\nexport const setDataLoginThunk = (email, password) => async (dispatch) => {\r\n        let response = await authAPI.login(email, password, )\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(authmeThunk())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Ошибка\"\r\n                dispatch(stopSubmit(\"login\", {_error:message }))\r\n            }\r\n    };\r\n\r\n\r\nexport const authmeThunk = () => async (dispatch) => {\r\n        let response = await  authAPI.authme();\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserData(response.data.id, response.data.email, response.data.login , true))\r\n            }\r\n};\r\n\r\nexport const logout = (bool) => async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n};\r\n\r\n\r\nexport default AuthPageReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authmeThunk, logout, setUserData} from \"../../Redux/Reducers/AuthReducer\";\r\nimport {setPhotoUser} from \"../../Redux/Reducers/ProfileReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}  />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login:state.AuthPageReducer.login,\r\n        photo:state.AuthPageReducer.photo,\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setUserData,\r\n    setPhotoUser,\r\n    //authmeThunk,\r\n    logout,\r\n\r\n})(HeaderContainer);","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + ( hasError ? s.error : \" \")} >\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport AuthPageReducer, {setDataLoginThunk} from \"../../../Redux/Reducers/AuthReducer\";\r\nimport {Input} from \"../../../common/FormConrols/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../../../common/FormConrols/FormsControls.module.css\"\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.setDataLoginThunk(formData.Login, formData.Password);\r\n        console.log(formData.Password)\r\n        //console.log(formData)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            Авторизация\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n        )\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field placeholder='login' name={\"Login\"} component={Input}\r\n                        validate={[required]}/>  </div>\r\n            <div><Field placeholder='password' name={\"Password\"} type={\"password\"} component={Input}\r\n                        validate={[required]} />  </div>\r\n            <div><Field type='checkbox' name={\"Remember me\"} component={\"c\"} /> Запомнить меня  </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div><button> Войти в акаунт </button></div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\n\r\nconst  LoginReduxForm  = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.AuthPageReducer.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps,{setDataLoginThunk})(Login);","import {authmeThunk} from \"./AuthReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n};\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n};\r\n\r\nconst setInitialized = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        let promise = dispatch(authmeThunk());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(setInitialized())\r\n        })\r\n};\r\n\r\n\r\nexport default AppReducer;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./Component/Header/Header\";\nimport Main from \"./Component/Main/Main/Main\";\nimport Footer from \"./Component/Footer/Footer\";\nimport Dialogs from \"./Component/Main/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nimport MainContainer from \"./Component/Main/Main/MainContainer\";\nimport UsersContainer from \"./Component/Main/Users/UsersContainer\";\nimport HeaderContainer from \"./Component/Header/HeaderContaine\";\nimport Login from \"./Component/Main/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {authmeThunk} from \"./Redux/Reducers/AuthReducer\";\nimport {initializeApp} from \"./Redux/Reducers/AppReducer\";\nimport Preloader from \"./common/Preloader\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return  <Preloader/>\n        }\n\n        return (\n            <div className={\"App\"}>\n                <HeaderContainer/>\n                <Route path='/profile/:userID?' render={() => <MainContainer/>}/>\n                <Route path=\"/dialogs\" component={Dialogs}/>\n                <Route path=\"/users\" component={UsersContainer}/>\n                <Route path=\"/login\" component={Login}/>\n\n                <Footer/>\n\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized:state.AppReducer.initialized,\n    }\n}\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport ProfilePageReducer from \"./Reducers/ProfileReducer\";\r\nimport UsersPageReducer from \"./Reducers/UsersReducer\";\r\nimport AuthPageReducer from \"./Reducers/AuthReducer\";\r\nimport { reducer as formReducer  } from  \"redux-form\"\r\nimport AppReducer from \"./Reducers/AppReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePageReducer,\r\n    UsersPageReducer,\r\n    AuthPageReducer,\r\n    form:formReducer,\r\n    AppReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/ReduxStore\"\n\n\n\n //let rerenderEntireTree = (state) => {\n     ReactDOM.render(\n\n         <React.StrictMode>\n             <BrowserRouter>\n                 <Provider store={store} >\n                     <App  />\n                 </Provider>\n             </BrowserRouter>\n         </React.StrictMode>,\n         document.getElementById('root')\n     );\n //};\n\n//rerenderEntireTree(store.getState());\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__318n1\",\"active\":\"Header_active__1tsaU\",\"auth\":\"Header_auth__2-Am-\",\"logout\":\"Header_logout__17PEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1dvtT\",\"img\":\"Footer_img__1lQzi\",\"imgMessages\":\"Footer_imgMessages__1ACES\",\"active\":\"Footer_active__1A6_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__bIMn1\",\"dilogsItems\":\"Message_dilogsItems__3kFiL\",\"messages\":\"Message_messages__2XjiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1nahg\",\"error\":\"FormsControls_error__c9KbS\",\"formSummaryError\":\"FormsControls_formSummaryError__A9BDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"me\":\"Me_me__mJ2AC\",\"nameme\":\"Me_nameme__3nqDB\",\"sticky\":\"Me_sticky__27dzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3Vy7T\",\"pageNumber\":\"Paginator_pageNumber__3M7aO\",\"selectedPage\":\"Paginator_selectedPage__1sbx3\"};"],"sourceRoot":""}