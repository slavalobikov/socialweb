{"version":3,"sources":["Component/Main/Dialogs/Dialogs.module.css","Component/Main/Main/Description/Description.module.css","Component/Main/Users/Users.module.css","Component/Main/Login/Login.module.css","utils/validators/validators.js","Component/Footer/Footer.jsx","Component/Main/Dialogs/Message/Message.jsx","common/Preloader.jsx","Component/Main/Dialogs/Me/Me.jsx","hoc/withAuthRedirect.jsx","api/api.js","utils/objectHelplers.js","Redux/Reducers/UsersReducer.js","Redux/ActionTypes.js","Redux/Reducers/ProfileReducer.js","Redux/Reducers/AuthReducer.js","Component/Main/Dialogs/Me/MeContainer.jsx","hoc/withProfileInfo.jsx","Component/Main/Dialogs/Dialogs.jsx","Component/Main/Main/Post/Post.jsx","Component/Main/Main/Status/StatusWithHook.jsx","common/FormConrols/FormsControls.js","Component/Main/Main/Description/Description.jsx","Component/Main/Main/Main.jsx","Component/Main/Main/MainContainer.jsx","Component/Main/Users/User.jsx","common/Paginator/Paginator.jsx","Component/Main/Users/Users.jsx","Redux/Reducers/usersSelectors.js","Component/Main/Users/UsersContainer.jsx","Component/Header/Header.jsx","Component/Header/HeaderContaine.jsx","Component/Main/Login/Login.jsx","Redux/Reducers/AppReducer.js","App.js","serviceWorker.js","Redux/ReduxStore.jsx","index.js","Component/Footer/Footer.module.css","Component/Header/Header.module.css","Component/Main/Main/Main.module.css","Component/Main/Main/Post/Post.module.css","common/FormConrols/FormsControls.module.css","Component/Main/Dialogs/Message/Message.module.css","Component/Main/Dialogs/Me/Me.module.css","common/Paginator/Paginator.module.css"],"names":["module","exports","maxaValue","Footer","props","className","s","footer","to","activeClassName","active","img","src","alt","imgMessages","DialogItem","Dialogs","dialogs","Preloader","Me","profile","me","id","nameme","fullName","photos","large","match","params","userID","nameUser","mapStateToProps","state","isAuth","AuthPageReducer","withAuthRedirect","Component","RedirectComponent","this","React","connect","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","post","resultCode","unfollowUser","delete","authAPI","email","password","rememberMe","profileAPI","setStatus","put","status","photoFile","formData","FormData","append","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","initialState","users","totalUsers","isFetching","isDisabled","setUsers","type","SET_USERS","follow","FOLLOW_USER","unfollow","UNFOLLOW_USER","bool","IS_DISABLED","IS_FETCHING","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","UsersPageReducer","action","followed","totalCount","filter","ADD_NEW_POST_TEXT","text","profilePage","name","photo","setPhotoUser","setStatusUser","getStatusThunk","getProfileThunk","ProfilePageReducer","newPostText","login","setUserData","payload","authmeThunk","MeContainer","compose","withRouter","withProfileInfo","content","Message","Post","imgAva","postArea","postName","fullname","postText","required","value","StatusHook","useState","editMode","setEditMode","useEffect","activateEditeMode","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","onClick","Input","input","meta","hasError","touched","error","formControl","DescriptoinStatusForm","reduxForm","form","contacts","lookingForAJob","handleSubmit","isOwner","onSubmit","Field","placeholder","component","Object","keys","key","contactTitle","contactValue","Contact","maxLength","length","AddPostFormRedux","validate","btn","Main","PostElement","p","ava","target","files","savePhoto","updateStatusThunk","aboutMe","console","log","posts","postData","addPost","newPostBody","MainContainer","refreshProfile","prevProps","prevState","snapshot","file","User","disabled","Disabled","some","unfUser","fUser","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","cn","selectedPage","pageNumber","Users","followUserThunk","unfollowUserThunk","onPageChangedThunk","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getDisabled","UsersContainer","getUserAC","bind","Header","header","auth","logout","alert","HeaderContainer","LoginReduxForm","style","formSummaryError","setDataLoginThunk","message","messages","stopSubmit","_error","Login","Password","initialized","AppReducer","App","initializeApp","HeaderContaine","path","render","promise","Promise","all","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.90bd95da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content___OaR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Description_content__1iUNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Users_content__19OzP\",\"selectedPage\":\"Users_selectedPage__1q73A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__SpNzn\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Поле обязательное для ввода!\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxaValue) => (value) => {\r\n    if ( value.length > maxaValue) return `Максимальное значение ${maxaValue} символов!`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport s from './Footer.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <NavLink to=\"/profile\" activeClassName={s.active}><img className={s.img} src=\"https://cdn4.iconfinder.com/data/icons/evil-icons-user-interface/64/avatar-512.png\" alt=\"Profile\"/></NavLink>\r\n\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}><img className={s.imgMessages} src=\"https://www.logolynx.com/images/logolynx/75/75189e2b07df0d2a8cc42dee4cf889b7.png\" alt=\"messages\"/></NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active}><img className={s.img} src=\"https://icons.iconarchive.com/icons/custom-icon-design/pretty-office-13/512/Users-icon.png\" alt=\"\"/>\r\n            </NavLink>\r\n        </footer>\r\n\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport s from './Message.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <NavLink activeClassName={s.active} to=\"/dialogs/1\"><DialogItem /></NavLink>\r\n        </div>\r\n\r\n    )\r\n};\r\nconst DialogItem = () => {\r\n    return <div className={s.DialogItem}>\r\n        <div><img src={'https://img8.eadaily.com/r650x450/o/7ac/95f49146b4501082acd22918d4cc2.jpg'} alt=\"\"/></div>\r\n        <div>name</div>\r\n    </div>\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\n\r\nconst Preloader = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Загрузка...</h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport s from './Me.module.css'\r\nimport Preloader from \"../../../../common/Preloader\";\r\n\r\n\r\nconst Me = (props) => {\r\n\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.me} id=\"navbar\">\r\n            <div className={s.nameme}> Вы {props.profile.fullName} </div>\r\n            <img src={props.profile.photos.large} alt=\"\"/>\r\n            {props.match.params.userID && <div>\r\n                <div className={s.nameUser}> Пользователь</div>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQiTFKqGQSmNR0oBxxx7XkVRlO_OijvVdh6n7RRyp1fWsKoFPSQ&usqp=CAU\"\r\n                    alt=\"\"/>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Me;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" /> ;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectAuthRedirectComponent;\r\n};\r\n\r\n\r\n","import * as axios from \"axios\";\r\n\r\n//let URL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"be820c73-af0b-4ffa-9553-5bd0d04425d6\"\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    followUser(userID) {\r\n        return instance.post(`follow/${userID}`).then(response => {\r\n            return response.data.resultCode\r\n        })\r\n    },\r\n    unfollowUser(userID) {\r\n        return instance.delete(`follow/${userID}`).then(response => {\r\n            return response.data.resultCode\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const authAPI  = {\r\n    authme() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login` , {email, password, rememberMe} )\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\n\r\nexport const profileAPI = {\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`).then (response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfile(userID){\r\n        return instance.get(`profile/${userID}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateStatus(setStatus) {\r\n        return instance.put(`profile/status`, {status: setStatus}).then(response =>{\r\n            return response\r\n        })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n};","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {userAPI} from \"../../api/api\";\r\nimport {updateObjectInArray} from \"../../utils/objectHelplers\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isDisabled: [],\r\n    status:''\r\n};\r\n\r\n\r\nconst UsersPageReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID,\"id\" ,{followed:true})\r\n/*\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n*/\r\n            };\r\n        case UNFOLLOW_USER: {\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users, action.userID,\"id\" ,{followed:false} )\r\n/*\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n*/\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalCount\r\n            }\r\n        }\r\n/*        case IS_FETCHING_TRUE: {\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        }\r\n        case IS_FETCHING_FALSE: {\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        }*/\r\n        case IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.bool\r\n            }\r\n        }\r\n        case IS_DISABLED: {\r\n            return {\r\n                ...state,\r\n                isDisabled: action.bool\r\n                    ? [...state.isDisabled, action.id]\r\n                    : state.isDisabled.filter(id => id != action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrent = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const isFetchingTrue = () => ({type: IS_FETCHING_TRUE});\r\nexport const isFetchingFalse = () => ({type: IS_FETCHING_FALSE});\r\nexport const follow = (userID) => {\r\n    return {\r\n        type: FOLLOW_USER,\r\n        userID\r\n    }\r\n};\r\nexport const unfollow = (userID) => {\r\n    return {\r\n        type: UNFOLLOW_USER,\r\n        userID\r\n    }\r\n};\r\nexport const isDisabled = (bool, id) => {\r\n    return ({type: IS_DISABLED, bool, id})\r\n};\r\nexport const isFetching = (bool) => ({type: IS_FETCHING, bool });\r\n\r\n\r\nexport const SET_USERS = \"SET_USERS\";\r\n\r\nconst FOLLOW_USER = \"FOLLOW_USER\";\r\nconst UNFOLLOW_USER = \"UNFOLLOW_USER\";\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst IS_FETCHING_TRUE = 'IS_FETCHING_TRUE';\r\nconst IS_FETCHING_FALSE = 'IS_FETCHING_FALSE';\r\nconst IS_DISABLED = 'IS_DISABLED';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\n\r\nexport const getUserAC = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        //dispatch(isFetchingTrue());\r\n        dispatch(isFetching(true));\r\n        let response = await userAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount));\r\n        //dispatch(isFetchingFalse());\r\n        dispatch(isFetching(false))\r\n    }\r\n};\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator ) => {\r\n    dispatch(isDisabled(true, id));\r\n    let response = await apiMethod(id);\r\n    if (response == 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(isDisabled(false, id))\r\n};\r\nexport const followUserThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userAPI.followUser.bind(userAPI);\r\n    let actionCreator = follow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n};\r\nexport const unfollowUserThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userAPI.unfollowUser.bind(userAPI);\r\n    let actionCreator = unfollow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n};\r\n\r\nexport const onPageChangedThunk = (pageNumber, pageSize) => async (dispatch) => {\r\n    //dispatch(isFetchingTrue());\r\n    dispatch(isFetching(true));\r\n    dispatch(setCurrent(pageNumber));\r\n    let response = await userAPI.getUsers(pageNumber, pageSize);\r\n    dispatch(setUsers(response.items));\r\n    //dispatch(isFetchingFalse());\r\n    dispatch(isFetching(false))\r\n};\r\n\r\nexport default UsersPageReducer;","import {SET_USERS} from \"./Reducers/UsersReducer\";\r\n\r\n\r\n\r\nexport const ADD_NEW_POST_TEXT = (text) => {\r\n    return {\r\n        type: ADD_NEW_POST_TEXT,\r\n        text\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};","import {ADD_NEW_POST_TEXT} from \"../ActionTypes\";\r\nimport {  profileAPI} from \"../../api/api\";\r\nimport {isFetching, isFetchingFalse, isFetchingTrue} from \"./UsersReducer\";\r\n\r\nconst SET_STATUS_USER = \"SET_STATUS_USER\";\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_PHOTO_USER = 'SET_PHOTO_USER';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nlet initialState = {\r\n\r\n    profilePage:[\r\n        {\r\n            id:1,\r\n            text: \"Привет\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        },\r\n        {\r\n            id:2,\r\n            text: \"Как дела?\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        },\r\n        {\r\n            id:3,\r\n            text: \"Что нового?\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        }\r\n    ],\r\n    photo:'',\r\n    status:\"\",\r\n    profile: null,\r\n\r\n};\r\nconst ProfilePageReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST_TEXT: {\r\n\r\n            let newPostText = {\r\n                id:5,\r\n                text:action.text,\r\n                name: \"Валерий Цепкало\",\r\n                img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n            };\r\n            return {\r\n                ...state,\r\n                profilePage: [...state.profilePage, newPostText],\r\n                newPostText: action.text,\r\n\r\n            }\r\n        }\r\n        case SET_PHOTO_USER: {\r\n            return {\r\n                ...state,\r\n                photo:action.photo\r\n            }\r\n        }\r\n        case SET_STATUS_USER: {\r\n            return {\r\n                ...state,\r\n                status:action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, photo: action.photos}\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport const setPhotoUser = (photo) => ({type: SET_PHOTO_USER, photo});\r\nexport const setStatusUser = (status) => ({type: SET_STATUS_USER, status});\r\nexport const savePhotoSuccess = (photos) => ({type:SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const getStatusThunk = (id) => async (dispatch) => {\r\n        let response = await profileAPI.getStatus(id);\r\n            dispatch(setStatusUser(response))\r\n};\r\n\r\nexport const getProfileThunk = (userID) => async (dispatch) => {\r\n            dispatch(isFetching(true));\r\n            let response = await profileAPI.getProfile(userID);\r\n            dispatch(setPhotoUser(response.photos.large));\r\n            dispatch(setUserProfile(response))\r\n            dispatch(getStatusThunk(userID));\r\n            dispatch(isFetching(false))\r\n};\r\n\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatusUser(status))\r\n            }\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n            }\r\n};\r\n\r\n\r\nexport default ProfilePageReducer;","import {authAPI, authme} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id:null,\r\n    email:null,\r\n    login:null,\r\n    isAuth:false,\r\n    password:null,\r\n    rememberMe:null,\r\n};\r\n\r\nconst AuthPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default: return state\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type:SET_USER_DATA, payload:{id, email, login, isAuth} });\r\n\r\nexport const setDataLoginThunk = (email, password) => async (dispatch) => {\r\n        let response = await authAPI.login(email, password, );\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(authmeThunk())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Ошибка\"\r\n                dispatch(stopSubmit(\"login\", {_error:message }))\r\n            }\r\n    };\r\n\r\n\r\nexport const authmeThunk = () => async (dispatch) => {\r\n        let response = await  authAPI.authme();\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserData(response.data.id, response.data.email, response.data.login , true))\r\n            }\r\n};\r\n\r\nexport const logout = (bool) => async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n};\r\n\r\n\r\nexport default AuthPageReducer;","import {connect} from \"react-redux\";\r\nimport React from 'react'\r\n\r\nimport Me from \"./Me\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withProfileInfo} from \"../../../../hoc/withProfileInfo\";\r\n\r\n\r\nclass MeContainer extends React.Component {\r\n\r\n/*\r\n\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n\r\n        this.props.getProfileThunk(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n*/\r\n\r\n    render() {\r\n        return <Me {...this.props} /*isOwner={!this.props.match.params.userID}*/ />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n\r\n    profile: state.ProfilePageReducer.profile,\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n    withProfileInfo,\r\n)(MeContainer)","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk} from \"../Redux/Reducers/ProfileReducer\";\r\nimport AuthPageReducer from \"../Redux/Reducers/AuthReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport const withProfileInfo = (Component) => {\r\n\r\n\r\n\r\n    class withProfileInfo extends React.Component {\r\n\r\n        componentDidMount() {\r\n            this.props.getProfileThunk(this.props.id)\r\n        }\r\n\r\n        render() {\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => ( {\r\n        login:state.AuthPageReducer.login,\r\n        id:state.AuthPageReducer.id,\r\n        /*newPostText:state.ProfilePageReducer.newPostText,\r\n        photo: state.ProfilePageReducer.photo,\r\n        isFetching: state.UsersPageReducer.isFetching,\r\n        status:state.ProfilePageReducer.status,\r\n        id:state.AuthPageReducer.id,\r\n        profile: state.ProfilePageReducer.profile,*/\r\n    });\r\n\r\n\r\n    let ConnectProfileInfoComponent = connect(mapStateToProps, {getProfileThunk})(withProfileInfo);\r\n    return ConnectProfileInfoComponent;\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport MeContainer from \"./Me/MeContainer\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <MeContainer />\r\n            <Message />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={s.post}>\r\n\r\n            <img className={s.imgAva} src={props.photo\r\n            || 'https://img8.eadaily.com/r650x450/o/7ac/95f49146b4501082acd22918d4cc2.jpg'} alt={props.name}/>\r\n\r\n            <div className={s.postArea}>\r\n                <div className={s.postName}>\r\n                    {props.fullname}\r\n                </div>\r\n                <div className={s.postText}>\r\n                    {props.text}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Post;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst StatusHook = (props) => {\r\n\r\n    let userID = props.userID;\r\n    if (!userID) {\r\n        userID = props.id;\r\n    }\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const activateEditeMode = () => {\r\n        setEditMode(true)\r\n\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            {editMode\r\n                ? (props.id == userID)\r\n                    ? <div> <input onChange={onStatusChange} onBlur={deactivateEditeMode}\r\n                                autoFocus={true} value={status} /></div>\r\n                    : <div onClick={activateEditeMode }>Status:{props.status || <span>3% </span>}</div>\r\n                :  <div onClick={activateEditeMode }>Status:{props.status || <span>3% </span>}</div>\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default StatusHook;","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + ( hasError ? s.error : \" \")} >\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../../common/FormConrols/FormsControls\";\r\nimport s from './Description.module.css';\r\n\r\n\r\n\r\nconst Description = ({contacts, lookingForAJob, handleSubmit, isOwner}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return <div className={s.content}>\r\n            {editMode\r\n                ? <div>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <button onClick={ () => setEditMode(false)}>Сохранить изменения</button>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на facebook'} name={'facebook'} component={Input} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на сайт'} name={'website'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на вк'} name={'vk'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на twitter'} name={'twitter'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на instagram'} name={'instagram'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на youtube'} name={'youtube'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на youtube'} name={'youtube'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на github'} name={'github'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на mainLink'} name={'mainLink'} component={'input'} /></div>\r\n                    </form>\r\n                  </div>\r\n                : <div>\r\n                    {isOwner ?<button onClick={() => setEditMode(true)}>Изменить данные</button> : <div> </div>}\r\n                    <div>{lookingForAJob ? <div>Ищу работу</div> : <div>Не ищу работу</div>}</div>\r\n\r\n                    <div>\r\n                        <b>Контакты</b>: {\r\n                        Object.keys(contacts).map(key => {\r\n                            return <Contact key={key} contactTitle={key} contactValue={contacts[key]}/>\r\n                        })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            }\r\n    </div>\r\n};\r\n\r\n/*a = form\r\nconst DescriptoinStatusForm = reduxForm({\r\n    form: 'descriptionStatus'\r\n})(a);\r\nexport DescriptoinStatusForm*/\r\n\r\nconst DescriptoinStatusForm = reduxForm({\r\n    form: 'descriptionStatus'\r\n})(Description);\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: <span>{contactValue}</span>\r\n    </div>\r\n};\r\n\r\n\r\nexport default DescriptoinStatusForm;","import React, {useState} from 'react';\r\nimport s from './Main.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport StatusHook from \"./Status/StatusWithHook\";\r\nimport DescriptoinStatusForm from \"./Description/Description\";\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const handleSubmit = (formData) => {\r\n        console.log('formData', formData)\r\n    };\r\n    let PostElement = props.profilePage.map(p => <Post img={p.img} text={p.text} key={p.id}\r\n                                                       name={p.name} fullname={props.profile.fullName}\r\n                                                       photo={props.profile.photos.large}/>);\r\n\r\n    const addNewPost = (postData) => {\r\n        props.addPost(postData.newPostBody)\r\n    };\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            {props.isFetching ? <Preloader/>\r\n                : <div className={s.ava}>\r\n                    <img\r\n                        src={!props.photo ? 'https://img8.eadaily.com/r650x450/o/7ac/95f49146b4501082acd22918d4cc2.jpg' : props.photo}\r\n                        alt=\"\"/>\r\n                    {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n            }\r\n            <div className={s.me}>\r\n                {props.profile.fullName}\r\n                <StatusHook status={props.status} updateStatus={props.updateStatusThunk} id={props.id}\r\n                            userID={props.match.params.userID}/>\r\n\r\n                            <div>Обо мне: {props.profile.aboutMe}</div>\r\n\r\n            </div>\r\n            <DescriptoinStatusForm handleSubmit={handleSubmit} contacts={props.profile.contacts}\r\n                                   lookingForAJob={props.lookingForAJob} isOwner={props.isOwner}/>\r\n            <div className={s.posts}>\r\n                {props.isOwner &&  <AddPostFormRedux onSubmit={addNewPost}/> }\r\n                {PostElement}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst maxLength = maxLengthCreator(300);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div ><Field className={s.input} component={\"textarea\"} name={\"newPostBody\"} placeholder={\"Написать пост\"}\r\n                        validate={[required, maxLength]}/></div>\r\n            <div>\r\n                <button className={s.btn}>Отрправить</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postAddPostForm\"})(AddPostForm);\r\n\r\n/*\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: <span>{contactValue}</span>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\nexport default Main;","import {connect} from \"react-redux\";\r\nimport React from 'react'\r\n\r\nimport Main from \"./Main\";\r\nimport {ADD_NEW_POST_TEXT,} from \"../../../Redux/ActionTypes\";\r\nimport {\r\n    getProfileThunk, savePhoto, setDataProfile,\r\n    setPhotoUser,\r\n\r\n    updateStatusThunk\r\n} from \"../../../Redux/Reducers/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n\r\n        this.props.getProfileThunk(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Main {...this.props} isOwner={!this.props.match.params.userID} />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    profilePage:state.ProfilePageReducer.profilePage,\r\n    newPostText:state.ProfilePageReducer.newPostText,\r\n    photo: state.ProfilePageReducer.photo,\r\n    isFetching: state.UsersPageReducer.isFetching,\r\n    status:state.ProfilePageReducer.status,\r\n    id:state.AuthPageReducer.id,\r\n    profile: state.ProfilePageReducer.profile,\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(newPostBody) => {\r\n            dispatch(ADD_NEW_POST_TEXT(newPostBody))\r\n        },\r\n        setPhotoUser:(photo) => {\r\n            dispatch(setPhotoUser(photo))\r\n        },\r\n        getProfileThunk: (id) => {\r\n            dispatch(getProfileThunk(id))\r\n        },\r\n        updateStatusThunk: (status) => {\r\n            dispatch(updateStatusThunk(status))\r\n        },\r\n        savePhoto: (photos) => {\r\n            dispatch(savePhoto(photos))\r\n        },\r\n\r\n    }\r\n};\r\n\r\n/*let withAuthRedirectCC = withAuthRedirect(MainContainer)\r\n\r\nlet withURLDataContainerComponent = withRouter (withAuthRedirectCC);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withURLDataContainerComponent);*/\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(MainContainer)","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <div >\r\n            <NavLink to={\"/profile/\" + props.u.id}>\r\n                {props.u.name}\r\n                <div><img\r\n                    src={!props.u.photos.large ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1200px-VK.com-logo.svg.png' : props.u.photos.large}\r\n                    alt={props.u.name}/></div>\r\n                <div>{props.status}</div>\r\n            </NavLink>\r\n            {props.u.followed\r\n                ? <button disabled={props.Disabled.some(id => id === props.u.id)}\r\n                          onClick={() => props.unfUser(props.u.id) }> Отписаться </button>\r\n                : <button disabled={props.Disabled.some(id => id === props.u.id)}\r\n                          onClick={ () => props.fUser(props.u.id) }> Подписаться </button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React, {useState} from 'react'\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i =1; i<= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n     return <div className={s.paginator}>\r\n        <button disabled={portionNumber <= 1} onClick={() => { setPortionNumber(portionNumber - 1) }}>Предыдущие</button>\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        <button disabled={portionCount <= portionNumber} onClick={() => { setPortionNumber(portionNumber + 1) }}>Следующие</button>\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css'\r\n\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport User from \"./User\";\r\nimport Paginator from \"../../../common/Paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n\r\n    let fUser = (id) => {\r\n        props.followUserThunk(id);\r\n    };\r\n    let unfUser = (id) => {\r\n    props.unfollowUserThunk(id)\r\n    };\r\n   let onPageChanged = (pageNumber) => {\r\n        props.onPageChangedThunk(pageNumber, props.pageSize)\r\n    };\r\n\r\n    return (\r\n        <div className={s.content}>\r\n\r\n            { props.isFetching ? <Preloader/>\r\n            : <div>\r\n                    <Paginator currentPage={props.currentPage} onPageChanged={onPageChanged}\r\n                               totalItemsCount={props.totalItemsCount} pageSize={props.pageSize}/>\r\n                    {props.users.map(u =>\r\n                        <User u={u} Disabled={props.Disabled} unfUser={unfUser} fUser={fUser} key={u.id} status={props.status} />\r\n                       /* <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            {u.name}\r\n                            <div><img\r\n                                src={!u.photos.large ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1200px-VK.com-logo.svg.png' : u.photos.large}\r\n                                alt={u.name}/></div>\r\n                            </NavLink>\r\n                            {u.followed\r\n                                ? <button disabled={props.Disabled.some(id => id === u.id)}\r\n                                    onClick={() => unfUser(u.id) }> Отписаться </button>\r\n                                : <button disabled={props.Disabled.some(id => id === u.id)}\r\n                                    onClick={ () => fUser(u.id) }> Подписаться </button>}\r\n                        </div>*/\r\n                    )\r\n                    }\r\n                </div>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.UsersPageReducer.users;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPageReducer.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPageReducer.totalUsers\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPageReducer.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPageReducer.isFetching;\r\n};\r\nexport const getDisabled = (state) => {\r\n    return state.UsersPageReducer.isDisabled;\r\n};\r\nexport const getStatusThunk = (state) => {\r\n    return state.ProfilePageReducer.status;\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport React from \"react\"\r\nimport Users from \"./Users\";\r\nimport {\r\n    followUserThunk, getUserAC,\r\n   onPageChangedThunk,\r\n    unfollowUserThunk\r\n} from \"../../../Redux/Reducers/UsersReducer\";\r\nimport {userAPI} from \"./../../../api/api\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getDisabled,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../../Redux/Reducers/usersSelectors\";\r\nimport {getStatusThunk} from \"../../../Redux/Reducers/ProfileReducer\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n            this.props.getUserAC(this.props.currentPage, this.props.pageSize);\r\n            };\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsers/this.props.pageSize);\r\n        let pages = [];\r\n        for (let i =1; i<= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n        return (\r\n             <Users {...this.props}  pages={pages} followUser={userAPI.followUser} unfollowUser={userAPI.unfollowUser}\r\n                    currentPage={this.props.currentPage} totalItemsCount={this.props.totalUsers} pageSize={this.props.pageSize}/>\r\n            )\r\n\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.UsersPageReducer.users,\r\n        pageSize: state.UsersPageReducer.pageSize,\r\n        totalUsers: state.UsersPageReducer.totalUsers,\r\n        currentPage:state.UsersPageReducer.currentPage,\r\n        isFetching: state.UsersPageReducer.isFetching,\r\n        Disabled:state.UsersPageReducer.isDisabled,\r\n\r\n    }\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        Disabled:getDisabled(state),\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserAC,\r\n        followUserThunk,\r\n        unfollowUserThunk,\r\n        onPageChangedThunk,\r\n            getStatusThunk,\r\n    }\r\n    ),\r\n    withAuthRedirect,\r\n)(UsersContainer)\r\n\r\n/*\r\nexport default withAuthRedirect(connect(mapStateToProps, {\r\n    getUserAC,\r\n    followUserThunk,\r\n    unfollowUserThunk,\r\n    onPageChangedThunk,\r\n    }\r\n)(UsersContainer));*/\r\n","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    const logout = () => {\r\n        props.logout(false);\r\n        console.log(props.isAuth)\r\n    };\r\n\r\n\r\n    const hello = () => {\r\n        alert(props.isAuth)\r\n    };\r\n    return (\r\n        <header className={s.header}>\r\n\r\n            <NavLink to=\"/profile\" activeClassName={s.active} >Моя страница</NavLink>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active} >Сообщения</NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active} >Пользователи</NavLink>\r\n\r\n           {props.isAuth\r\n               ? <div className={s.auth}>{props.login} <img src={!props.photo\r\n                   ? 'https://avatars.yandex.net/get-music-content/175191/f26e7e1a.p.5821649/m1000x1000'\r\n                   : props.photo} alt=\"\"/> <NavLink to={\"/login\"} className={s.logout} onClick={logout}>Выйти</NavLink>\r\n\r\n           </div>\r\n               : <div className={s.auth}>Войдите</div> }\r\n            <button onClick={hello} >HHH</button>\r\n\r\n        </header>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authmeThunk, logout, setUserData} from \"../../Redux/Reducers/AuthReducer\";\r\nimport {setPhotoUser} from \"../../Redux/Reducers/ProfileReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}  />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login:state.AuthPageReducer.login,\r\n        photo:state.AuthPageReducer.photo,\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setUserData,\r\n    setPhotoUser,\r\n    //authmeThunk,\r\n    logout,\r\n\r\n})(HeaderContainer);","import React from 'react';\r\nimport s from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport AuthPageReducer, {setDataLoginThunk} from \"../../../Redux/Reducers/AuthReducer\";\r\nimport {Input} from \"../../../common/FormConrols/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../../../common/FormConrols/FormsControls.module.css\"\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.setDataLoginThunk(formData.Login, formData.Password);\r\n        console.log(formData.Password)\r\n        //console.log(formData)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            Авторизация\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n        )\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field placeholder='login' name={\"Login\"} component={Input}\r\n                        validate={[required]}/>  </div>\r\n            <div><Field placeholder='password' name={\"Password\"} type={\"password\"} component={Input}\r\n                        validate={[required]} />  </div>\r\n            <div><Field type='checkbox' name={\"Remember me\"} component={\"c\"} /> Запомнить меня  </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div><button> Войти в акаунт </button></div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\n\r\nconst  LoginReduxForm  = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.AuthPageReducer.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps,{setDataLoginThunk})(Login);","import {authmeThunk} from \"./AuthReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n};\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n};\r\n\r\nconst setInitialized = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        let promise = dispatch(authmeThunk());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(setInitialized())\r\n        })\r\n};\r\n\r\n\r\nexport default AppReducer;","import React from 'react';\nimport './App.css';\nimport Footer from \"./Component/Footer/Footer\";\nimport Dialogs from \"./Component/Main/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nimport MainContainer from \"./Component/Main/Main/MainContainer\";\nimport UsersContainer from \"./Component/Main/Users/UsersContainer\";\nimport HeaderContainer from \"./Component/Header/HeaderContaine\";\nimport Login from \"./Component/Main/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./Redux/Reducers/AppReducer\";\nimport Preloader from \"./common/Preloader\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return  <Preloader/>\n        }\n\n        return (\n            <div className={\"App\"}>\n                <HeaderContainer/>\n                <Route path='/profile/:userID?' render={() => <MainContainer/>}/>\n                <Route path=\"/dialogs/:userID?\" component={Dialogs}/>\n                <Route path=\"/users\" component={UsersContainer}/>\n                <Route path=\"/login\" component={Login}/>\n\n                <Footer/>\n\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized:state.AppReducer.initialized,\n    }\n};\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport ProfilePageReducer from \"./Reducers/ProfileReducer\";\r\nimport UsersPageReducer from \"./Reducers/UsersReducer\";\r\nimport AuthPageReducer from \"./Reducers/AuthReducer\";\r\nimport { reducer as formReducer  } from  \"redux-form\"\r\nimport AppReducer from \"./Reducers/AppReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePageReducer,\r\n    UsersPageReducer,\r\n    AuthPageReducer,\r\n    form:formReducer,\r\n    AppReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/ReduxStore\"\n\n\n\n //let rerenderEntireTree = (state) => {\n     ReactDOM.render(\n\n         <React.StrictMode>\n             <BrowserRouter>\n                 <Provider store={store} >\n                     <App  />\n                 </Provider>\n             </BrowserRouter>\n         </React.StrictMode>,\n         document.getElementById('root')\n     );\n //};\n\n//rerenderEntireTree(store.getState());\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1dvtT\",\"img\":\"Footer_img__1lQzi\",\"imgMessages\":\"Footer_imgMessages__1ACES\",\"active\":\"Footer_active__1A6_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__318n1\",\"active\":\"Header_active__1tsaU\",\"auth\":\"Header_auth__2-Am-\",\"logout\":\"Header_logout__17PEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__3Bs3o\",\"ava\":\"Main_ava__1o9-r\",\"me\":\"Main_me__3UC4q\",\"posts\":\"Main_posts__lOreb\",\"input\":\"Main_input__1jIeW\",\"btn\":\"Main_btn__1fyob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2V2IF\",\"postArea\":\"Post_postArea__3QaqU\",\"postName\":\"Post_postName__3RciP\",\"postText\":\"Post_postText__1qnie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1nahg\",\"error\":\"FormsControls_error__c9KbS\",\"formSummaryError\":\"FormsControls_formSummaryError__A9BDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__bIMn1\",\"DialogItem\":\"Message_DialogItem__2u7aY\",\"active\":\"Message_active__2Ajpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"me\":\"Me_me__mJ2AC\",\"nameme\":\"Me_nameme__3nqDB\",\"sticky\":\"Me_sticky__27dzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3Vy7T\",\"pageNumber\":\"Paginator_pageNumber__3M7aO\",\"selectedPage\":\"Paginator_selectedPage__1sbx3\"};"],"sourceRoot":""}