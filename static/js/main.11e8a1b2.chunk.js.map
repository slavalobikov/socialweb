{"version":3,"sources":["Component/Main/Dialogs/Dialogs.module.css","Component/Main/Main/Description/Description.module.css","Component/Main/Users/Users.module.css","Component/Main/Login/Login.module.css","utils/validators/validators.js","Component/Footer/Footer.jsx","common/Preloader.jsx","Component/Main/Dialogs/Me/Me.jsx","hoc/withAuthRedirect.jsx","api/api.js","utils/objectHelplers.js","Redux/Reducers/UsersReducer.js","Redux/ActionTypes.js","Redux/Reducers/ProfileReducer.js","Redux/Reducers/AuthReducer.js","Component/Main/Dialogs/Me/MeContainer.jsx","hoc/withProfileInfo.jsx","Component/Main/Dialogs/Message/Message.jsx","Component/Main/Dialogs/Message/MessageContainer.jsx","Component/Main/Dialogs/MessageArea/MessageArea.jsx","Redux/Reducers/DialogReducer.js","Component/Main/Dialogs/MessageArea/MessageAreaContainer.jsx","Component/Main/Dialogs/Dialogs.jsx","Component/Main/Main/Post/Post.jsx","Component/Main/Main/Status/StatusWithHook.jsx","common/FormConrols/FormsControls.js","Component/Main/Main/Description/Description.jsx","Component/Main/Main/Main.jsx","Component/Main/Main/MainContainer.jsx","Component/Main/Users/User.jsx","common/Paginator/Paginator.jsx","Component/Main/Users/Users.jsx","Redux/Reducers/usersSelectors.js","Component/Main/Users/UsersContainer.jsx","Component/Header/Header.jsx","Component/Header/HeaderContaine.jsx","Component/Main/Login/Login.jsx","Redux/Reducers/AppReducer.js","App.js","serviceWorker.js","Redux/ReduxStore.jsx","index.js","Component/Footer/Footer.module.css","Component/Header/Header.module.css","common/FormConrols/FormsControls.module.css","Component/Main/Main/Main.module.css","Component/Main/Dialogs/MessageArea/MessageArea.module.css","Component/Main/Main/Post/Post.module.css","Component/Main/Dialogs/Me/Me.module.css","Component/Main/Dialogs/Message/Message.module.css","common/Paginator/Paginator.module.css"],"names":["module","exports","maxaValue","Footer","props","className","s","footer","to","activeClassName","active","img","src","alt","imgMessages","Preloader","preloader","Me","profile","id","match","params","userID","me","nameme","fullName","photos","large","nameUser","dialogsReducer","users","name","mapStateToProps","state","isAuth","AuthPageReducer","withAuthRedirect","Component","RedirectComponent","this","React","connect","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","post","resultCode","unfollowUser","delete","authAPI","email","password","rememberMe","profileAPI","setStatus","put","status","photoFile","formData","FormData","append","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","initialState","totalUsers","isFetching","isDisabled","setUsers","type","SET_USERS","follow","FOLLOW_USER","unfollow","UNFOLLOW_USER","bool","IS_DISABLED","IS_FETCHING","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","UsersPageReducer","action","followed","totalCount","filter","ADD_NEW_POST_TEXT","text","profilePage","photo","setPhotoUser","setStatusUser","getStatusThunk","getProfileThunk","ProfilePageReducer","newPostText","login","hello","setUserData","payload","authmeThunk","MeContainer","compose","withRouter","withProfileInfo","DialogItem","Dialogs","PersonElement","p","key","dialogs","Message","MessageArea","MessageElements","messages","m","cn","right","isYou","message","pageNumber","content","MessageContainer","MessageAreaContainer","Post","imgAva","postArea","postName","fullname","postText","required","value","StatusHook","useState","editMode","setEditMode","useEffect","activateEditeMode","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","onClick","Input","input","meta","hasError","touched","error","formControl","DescriptoinStatusForm","reduxForm","form","contacts","lookingForAJob","handleSubmit","isOwner","onSubmit","Field","placeholder","component","Object","keys","contactTitle","contactValue","Contact","maxLength","length","AddPostFormRedux","validate","btn","Main","PostElement","ava","target","files","savePhoto","updateStatusThunk","aboutMe","console","log","posts","postData","addPost","newPostBody","MainContainer","refreshProfile","prevProps","prevState","snapshot","file","User","disabled","Disabled","some","unfUser","fUser","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","selectedPage","Users","followUserThunk","unfollowUserThunk","onPageChangedThunk","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getDisabled","UsersContainer","getUserAC","bind","Header","header","auth","logout","HeaderContainer","logoutAC","LoginReduxForm","style","formSummaryError","setDataLoginThunk","stopSubmit","_error","Login","Password","initialized","AppReducer","App","initializeApp","HeaderContaine","path","render","promise","Promise","all","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.11e8a1b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content___OaR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Description_content__1iUNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Users_content__19OzP\",\"selectedPage\":\"Users_selectedPage__1q73A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__SpNzn\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Поле обязательное для ввода!\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxaValue) => (value) => {\r\n    if ( value.length > maxaValue) return `Максимальное значение ${maxaValue} символов!`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport s from './Footer.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <NavLink to=\"/profile\" activeClassName={s.active}><img className={s.img} src=\"https://cdn4.iconfinder.com/data/icons/evil-icons-user-interface/64/avatar-512.png\" alt=\"Profile\"/></NavLink>\r\n\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}><img className={s.imgMessages} src=\"https://www.logolynx.com/images/logolynx/75/75189e2b07df0d2a8cc42dee4cf889b7.png\" alt=\"messages\"/></NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active}><img className={s.img} src=\"https://icons.iconarchive.com/icons/custom-icon-design/pretty-office-13/512/Users-icon.png\" alt=\"\"/>\r\n            </NavLink>\r\n        </footer>\r\n\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader = (props) => {\r\n\r\n    return (\r\n        <div className={s.preloader}>\r\n            <h1>Загрузка...</h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport s from './Me.module.css'\r\nimport Preloader from \"../../../../common/Preloader\";\r\n\r\n\r\nconst Me = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    let id = props.match.params.userID;\r\n\r\n    return (\r\n        <div className={s.me} id=\"navbar\">\r\n            <div className={s.nameme}> Вы {props.profile.fullName} </div>\r\n            <img src={props.profile.photos.large} alt=\"\"/>\r\n            {props.match.params.userID && <div>\r\n                <div className={s.nameUser}> Пользователь:\r\n                    <div>{props.dialogsReducer.users[id-1].name}</div></div>\r\n                <img\r\n                    src={props.dialogsReducer.users[id-1].img}\r\n                    alt=\"\"/>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Me;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" /> ;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectAuthRedirectComponent;\r\n};\r\n\r\n\r\n","import * as axios from \"axios\";\r\n\r\n//let URL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"be820c73-af0b-4ffa-9553-5bd0d04425d6\"\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    followUser(userID) {\r\n        return instance.post(`follow/${userID}`).then(response => {\r\n            return response.data.resultCode\r\n        })\r\n    },\r\n    unfollowUser(userID) {\r\n        return instance.delete(`follow/${userID}`).then(response => {\r\n            return response.data.resultCode\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const authAPI  = {\r\n    authme() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login` , {email, password, rememberMe} )\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\n\r\nexport const profileAPI = {\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`).then (response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfile(userID){\r\n        return instance.get(`profile/${userID}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateStatus(setStatus) {\r\n        return instance.put(`profile/status`, {status: setStatus}).then(response =>{\r\n            return response\r\n        })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n};","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {userAPI} from \"../../api/api\";\r\nimport {updateObjectInArray} from \"../../utils/objectHelplers\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isDisabled: [],\r\n    status:''\r\n};\r\n\r\n\r\nconst UsersPageReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID,\"id\" ,{followed:true})\r\n/*\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n*/\r\n            };\r\n        case UNFOLLOW_USER: {\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users, action.userID,\"id\" ,{followed:false} )\r\n/*\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n*/\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalCount\r\n            }\r\n        }\r\n/*        case IS_FETCHING_TRUE: {\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        }\r\n        case IS_FETCHING_FALSE: {\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        }*/\r\n        case IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.bool\r\n            }\r\n        }\r\n        case IS_DISABLED: {\r\n            return {\r\n                ...state,\r\n                isDisabled: action.bool\r\n                    ? [...state.isDisabled, action.id]\r\n                    : state.isDisabled.filter(id => id != action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrent = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const isFetchingTrue = () => ({type: IS_FETCHING_TRUE});\r\nexport const isFetchingFalse = () => ({type: IS_FETCHING_FALSE});\r\nexport const follow = (userID) => {\r\n    return {\r\n        type: FOLLOW_USER,\r\n        userID\r\n    }\r\n};\r\nexport const unfollow = (userID) => {\r\n    return {\r\n        type: UNFOLLOW_USER,\r\n        userID\r\n    }\r\n};\r\nexport const isDisabled = (bool, id) => {\r\n    return ({type: IS_DISABLED, bool, id})\r\n};\r\nexport const isFetching = (bool) => ({type: IS_FETCHING, bool });\r\n\r\n\r\nexport const SET_USERS = \"SET_USERS\";\r\n\r\nconst FOLLOW_USER = \"FOLLOW_USER\";\r\nconst UNFOLLOW_USER = \"UNFOLLOW_USER\";\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst IS_FETCHING_TRUE = 'IS_FETCHING_TRUE';\r\nconst IS_FETCHING_FALSE = 'IS_FETCHING_FALSE';\r\nconst IS_DISABLED = 'IS_DISABLED';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\n\r\nexport const getUserAC = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(isFetching(true));\r\n        let response = await userAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount));\r\n        dispatch(isFetching(false))\r\n    }\r\n};\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator ) => {\r\n    dispatch(isDisabled(true, id));\r\n    let response = await apiMethod(id);\r\n    if (response == 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(isDisabled(false, id))\r\n};\r\nexport const followUserThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userAPI.followUser.bind(userAPI);\r\n    let actionCreator = follow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n};\r\nexport const unfollowUserThunk = (id) => async (dispatch) => {\r\n    let apiMethod = userAPI.unfollowUser.bind(userAPI);\r\n    let actionCreator = unfollow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n};\r\n\r\nexport const onPageChangedThunk = (pageNumber, pageSize) => async (dispatch) => {\r\n    //dispatch(isFetchingTrue());\r\n    dispatch(isFetching(true));\r\n    dispatch(setCurrent(pageNumber));\r\n    let response = await userAPI.getUsers(pageNumber, pageSize);\r\n    dispatch(setUsers(response.items));\r\n    //dispatch(isFetchingFalse());\r\n    dispatch(isFetching(false))\r\n};\r\n\r\nexport default UsersPageReducer;","import {SET_USERS} from \"./Reducers/UsersReducer\";\r\n\r\n\r\n\r\nexport const ADD_NEW_POST_TEXT = (text) => {\r\n    return {\r\n        type: ADD_NEW_POST_TEXT,\r\n        text\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};","import {ADD_NEW_POST_TEXT} from \"../ActionTypes\";\r\nimport {  profileAPI} from \"../../api/api\";\r\nimport {isFetching, isFetchingFalse, isFetchingTrue} from \"./UsersReducer\";\r\n\r\nconst SET_STATUS_USER = \"SET_STATUS_USER\";\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_PHOTO_USER = 'SET_PHOTO_USER';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nlet initialState = {\r\n\r\n    profilePage:[\r\n        {\r\n            id:1,\r\n            text: \"Привет\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        },\r\n        {\r\n            id:2,\r\n            text: \"Как дела?\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        },\r\n        {\r\n            id:3,\r\n            text: \"Что нового?\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        }\r\n    ],\r\n    photo:'',\r\n    status:\"\",\r\n    profile: null,\r\n\r\n};\r\nconst ProfilePageReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST_TEXT: {\r\n\r\n            let newPostText = {\r\n                id:5,\r\n                text:action.text,\r\n                name: \"Валерий Цепкало\",\r\n                img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n            };\r\n            return {\r\n                ...state,\r\n                profilePage: [...state.profilePage, newPostText],\r\n                newPostText: action.text,\r\n\r\n            }\r\n        }\r\n        case SET_PHOTO_USER: {\r\n            return {\r\n                ...state,\r\n                photo:action.photo\r\n            }\r\n        }\r\n        case SET_STATUS_USER: {\r\n            return {\r\n                ...state,\r\n                status:action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, photo: action.photos};\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport const setPhotoUser = (photo) => ({type: SET_PHOTO_USER, photo});\r\nexport const setStatusUser = (status) => ({type: SET_STATUS_USER, status});\r\nexport const savePhotoSuccess = (photos) => ({type:SAVE_PHOTO_SUCCESS, photos});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const getStatusThunk = (id) => async (dispatch) => {\r\n        let response = await profileAPI.getStatus(id);\r\n            dispatch(setStatusUser(response))\r\n};\r\n\r\nexport const getProfileThunk = (userID) => async (dispatch) => {\r\n            dispatch(isFetching(true));\r\n            let response = await profileAPI.getProfile(userID);\r\n            dispatch(setPhotoUser(response.photos.large));\r\n            dispatch(setUserProfile(response));\r\n            dispatch(getStatusThunk(userID));\r\n            dispatch(isFetching(false))\r\n};\r\n\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatusUser(status))\r\n            }\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n            }\r\n};\r\n\r\n\r\nexport default ProfilePageReducer;","import {authAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\nimport {isFetching} from \"./UsersReducer\";\r\n\r\nconst SET_HELLO ='SET_HELLO';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst LOGOUT = 'LOGOUT';\r\nlet initialState = {\r\n    id:null,\r\n    email:null,\r\n    login:null,\r\n    isAuth:false,\r\n    password:null,\r\n    rememberMe:null,\r\n    hello: false\r\n};\r\n\r\nconst AuthPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_HELLO:\r\n            return  {\r\n                ...state,\r\n                hello: action.bool\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuth:false,\r\n                login:null,\r\n            };\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport const logoutAC = () => ({type: LOGOUT})\r\n\r\nexport const HelloAC = (bool) => ({type:SET_HELLO, bool})\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type:SET_USER_DATA, payload:{id, email, login, isAuth} });\r\n\r\nexport const setDataLoginThunk = (email, password) => async (dispatch) => {\r\n        let response = await authAPI.login(email, password, );\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(authmeThunk())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Ошибка\"\r\n                dispatch(stopSubmit(\"login\", {_error:message }))\r\n            }\r\n    };\r\n\r\n\r\nexport const authmeThunk = () => async (dispatch) => {\r\n        let response = await  authAPI.authme();\r\n    dispatch(isFetching(true));\r\n    if (response.resultCode === 0) {\r\n                dispatch(setUserData(response.data.id, response.data.email, response.data.login , true))\r\n            }\r\n    dispatch(isFetching(false));\r\n\r\n};\r\n\r\nexport const logout = (bool) => async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0){\r\n            dispatch(setUserData(null, null, null, false))\r\n        }\r\n            };\r\n\r\n\r\n\r\nexport default AuthPageReducer;","import {connect} from \"react-redux\";\r\nimport React from 'react'\r\n\r\nimport Me from \"./Me\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withProfileInfo} from \"../../../../hoc/withProfileInfo\";\r\n\r\n\r\nclass MeContainer extends React.Component {\r\n\r\n/*\r\n\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n\r\n        this.props.getProfileThunk(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n*/\r\n\r\n    render() {\r\n        return <Me {...this.props} /*isOwner={!this.props.match.params.userID}*/ />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n\r\n    profile: state.ProfilePageReducer.profile,\r\n    dialogsReducer:state.dialogsReducer,\r\n\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n    withProfileInfo,\r\n)(MeContainer)","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk} from \"../Redux/Reducers/ProfileReducer\";\r\nimport AuthPageReducer from \"../Redux/Reducers/AuthReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport const withProfileInfo = (Component) => {\r\n\r\n\r\n\r\n    class withProfileInfo extends React.Component {\r\n\r\n        componentDidMount() {\r\n            this.props.getProfileThunk(this.props.id)\r\n        }\r\n\r\n        render() {\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => ( {\r\n        login:state.AuthPageReducer.login,\r\n        id:state.AuthPageReducer.id,\r\n        /*newPostText:state.ProfilePageReducer.newPostText,\r\n        photo: state.ProfilePageReducer.photo,\r\n        isFetching: state.UsersPageReducer.isFetching,\r\n        status:state.ProfilePageReducer.status,\r\n        id:state.AuthPageReducer.id,\r\n        profile: state.ProfilePageReducer.profile,*/\r\n    });\r\n\r\n\r\n    let ConnectProfileInfoComponent = connect(mapStateToProps, {getProfileThunk})(withProfileInfo);\r\n    return ConnectProfileInfoComponent;\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Message.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let PersonElement = props.dialogsReducer.users.map(p => (\r\n        <NavLink key={p.id} activeClassName={s.active} to={`/dialogs/${p.id}`}><DialogItem  name={p.name} img={p.img} /></NavLink>\r\n    ));\r\n    return (\r\n        <div className={s.dialogs}>\r\n            {PersonElement}\r\n        </div>\r\n\r\n    )\r\n};\r\nconst DialogItem = ({name, img}) => {\r\n    return <div className={s.DialogItem}>\r\n        <div><img src={img} alt=\"\"/></div>\r\n        <div>{name}</div>\r\n    </div>\r\n};\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\n/*\r\nimport React from 'react'\r\n*/\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Message from \"./Message\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    dialogsReducer:state.dialogsReducer,\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n    /*withProfileInfo,*/\r\n)(Message)","import React, {useState} from 'react';\r\nimport s from './MessageArea.module.css'\r\nimport cn from \"classnames\";\r\n\r\n\r\n\r\nconst MessageArea = (props) => {\r\n\r\n    if (props.match.params.userID) {\r\n        let MessageElements = props.dialogsReducer.messages[props.match.params.userID - 1].a.map(m => (\r\n            <div key={m.id} className={ cn({\r\n                [s.right]: m.isYou, [s.message]: true\r\n            }, s.pageNumber) }><span className={s.text}>{m.message}</span></div>\r\n        ));\r\n        return (\r\n            <div className={s.MessageArea}>\r\n                {MessageElements}\r\n            </div>\r\n        )\r\n    } else {\r\n        return <span></span>\r\n    }\r\n\r\n};\r\n\r\nexport default MessageArea;","\r\nlet initialState = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            name: 'Светозар Трубецкой',\r\n            img: 'https://img04.rl0.ru/4c3a6c57c2a08a723214ba61ff9b2aef/c615x400i/news.rambler.ru/img/2017/08/31115059.047592.2664.jpeg'\r\n        },\r\n        {id: 2, name: 'Милица Голицына', img: 'https://pbs.twimg.com/profile_images/811139177341485056/hvSO9ut1.jpg'},\r\n        {\r\n            id: 3,\r\n            name: 'Любомир Ягужинский',\r\n            img: 'https://storage.myseldon.com/news_pict_05/05E7E5C9CE6AA09669C839A987C3080C'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Добрыня Алтуфьев',\r\n            img: 'https://sun9-33.userapi.com/impf/c638418/v638418588/4a9e7/PUUC3W2ihCA.jpg?size=400x0&quality=90&sign=b34a698aa4dfc7fc4851449f08824abb&ava=1'\r\n        },\r\n    ],\r\n    messages: [\r\n        {a:[{id: 1, message: 'Привет приятель!', isYou: false},\r\n                {id: 2, message: 'Приветсвую))', isYou: true},\r\n                {id: 3, message: 'Как делишки?', isYou: true},\r\n                {id: 4, message: 'Ну такое....', isYou: false},\r\n                {id: 5, message: 'А что случилось?', isYou: true},\r\n                {id: 6, message: 'В школе двойку получил:(', isYou: false},\r\n                {id: 7, message: 'Ну не растраивайся, все норм будет!', isYou: true},\r\n                {id: 8, message: 'Ну не растраивайся, все норм будет!', isYou: false},\r\n            ]},\r\n        {a:[{id: 1, message: '2edsfd', isYou: false},\r\n                {id: 2, message: 'dfdf dfdf dsd it-sdsd?', isYou: true},\r\n                {id: 3, message: 'fddfdf', isYou: true},\r\n                {id: 4, message: 'dffdf', isYou: false},\r\n                {id: 5, message: 'dfdfdf', isYou: true},]},\r\n        {a:[{id: 1, message: 'dfdfdfdfdfd', isYou: false},\r\n                {id: 2, message: 'dfdf is dsd dfdf-sdsd?', isYou: true},\r\n                {id: 3, message: 'qwq   wewe', isYou: true},\r\n                {id: 4, message: 'fdfdfdf', isYou: false},\r\n                {id: 5, message: 'fdf', isYou: true},]},\r\n        {a:[{id: 1, message: 'l;kwe;lmlksmd', isYou: false},\r\n                {id: 2, message: 'Hdsow is dsd it-wewe?', isYou: true},\r\n                {id: 3, message: 'dfdf', isYou: true},\r\n                {id: 4, message: 'dfdf', isYou: false},\r\n                {id: 5, message: 'ewdsdsd', isYou: true},]},\r\n    ],\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport default dialogsReducer;","import {connect} from \"react-redux\";\r\n\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MessageArea from \"./MessageArea\";\r\nimport {sendMessageCreator} from \"../../../../Redux/Reducers/DialogReducer\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    dialogsReducer:state.dialogsReducer,\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps,),\r\n    withRouter,\r\n    withAuthRedirect,\r\n    /*withProfileInfo,*/\r\n)(MessageArea)","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport MeContainer from \"./Me/MeContainer\";\r\nimport MessageContainer from \"./Message/MessageContainer\";\r\nimport MessageArea from \"./MessageArea/MessageArea\";\r\nimport MessageAreaContainer from \"./MessageArea/MessageAreaContainer\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <MeContainer />\r\n            <MessageContainer />\r\n            <MessageAreaContainer />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={s.post}>\r\n\r\n            <img className={s.imgAva} src={props.photo\r\n            || 'https://img8.eadaily.com/r650x450/o/7ac/95f49146b4501082acd22918d4cc2.jpg'} alt={props.name}/>\r\n\r\n            <div className={s.postArea}>\r\n                <div className={s.postName}>\r\n                    {props.fullname}\r\n                </div>\r\n                <div className={s.postText}>\r\n                    {props.text}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Post;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst StatusHook = (props) => {\r\n\r\n    let userID = props.userID;\r\n    if (!userID) {\r\n        userID = props.id;\r\n    }\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const activateEditeMode = () => {\r\n        setEditMode(true)\r\n\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            {editMode\r\n                ? (props.id == userID)\r\n                    ? <div> <input onChange={onStatusChange} onBlur={deactivateEditeMode}\r\n                                autoFocus={true} value={status} /></div>\r\n                    : <div onClick={activateEditeMode }>Status:{props.status || <span>3% </span>}</div>\r\n                :  <div onClick={activateEditeMode }>Status:{props.status || <span>3% </span>}</div>\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default StatusHook;","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + ( hasError ? s.error : \" \")} >\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + ( hasError ? s.error : \" \")} >\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../../common/FormConrols/FormsControls\";\r\nimport s from './Description.module.css';\r\n\r\n\r\n\r\nconst Description = ({contacts, lookingForAJob, handleSubmit, isOwner}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return <div className={s.content}>\r\n            {editMode\r\n                ? <div>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <button onClick={ () => setEditMode(false)}>Сохранить изменения</button>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на facebook'} name={'facebook'} component={Input} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на сайт'} name={'website'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на вк'} name={'vk'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на twitter'} name={'twitter'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на instagram'} name={'instagram'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на youtube'} name={'youtube'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на youtube'} name={'youtube'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на github'} name={'github'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на mainLink'} name={'mainLink'} component={'input'} /></div>\r\n                    </form>\r\n                  </div>\r\n                : <div>\r\n                    {isOwner ?<button onClick={() => setEditMode(true)}>Изменить данные</button> : <div> </div>}\r\n                    <div>{lookingForAJob ? <div>Ищу работу</div> : <div>Не ищу работу</div>}</div>\r\n\r\n                    <div>\r\n                        <b>Контакты</b>: {\r\n                        Object.keys(contacts).map(key => {\r\n                            return <Contact key={key} contactTitle={key} contactValue={contacts[key]}/>\r\n                        })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            }\r\n    </div>\r\n};\r\n\r\n/*a = form\r\nconst DescriptoinStatusForm = reduxForm({\r\n    form: 'descriptionStatus'\r\n})(a);\r\nexport DescriptoinStatusForm*/\r\n\r\nconst DescriptoinStatusForm = reduxForm({\r\n    form: 'descriptionStatus'\r\n})(Description);\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: <span>{contactValue}</span>\r\n    </div>\r\n};\r\n\r\n\r\nexport default DescriptoinStatusForm;","import React, {useState} from 'react';\r\nimport s from './Main.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport StatusHook from \"./Status/StatusWithHook\";\r\nimport DescriptoinStatusForm from \"./Description/Description\";\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const handleSubmit = (formData) => {\r\n        console.log('formData', formData)\r\n    };\r\n    let PostElement = props.profilePage.map(p => <Post img={p.img} text={p.text} key={p.id}\r\n                                                       name={p.name} fullname={props.profile.fullName}\r\n                                                       photo={props.profile.photos.large}/>);\r\n\r\n    const addNewPost = (postData) => {\r\n        props.addPost(postData.newPostBody)\r\n    };\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            {props.isFetching ? <Preloader/>\r\n                : <div className={s.ava}>\r\n                    <img\r\n                        src={!props.photo ? 'https://img8.eadaily.com/r650x450/o/7ac/95f49146b4501082acd22918d4cc2.jpg' : props.photo}\r\n                        alt=\"\"/>\r\n                    {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n            }\r\n            <div className={s.me}>\r\n                {props.profile.fullName}\r\n                <StatusHook status={props.status} updateStatus={props.updateStatusThunk} id={props.id}\r\n                            userID={props.match.params.userID}/>\r\n\r\n                            <div>Обо мне: {props.profile.aboutMe}</div>\r\n\r\n            </div>\r\n            <DescriptoinStatusForm handleSubmit={handleSubmit} contacts={props.profile.contacts}\r\n                                   lookingForAJob={props.lookingForAJob} isOwner={props.isOwner}/>\r\n            <div className={s.posts}>\r\n                {props.isOwner &&  <AddPostFormRedux onSubmit={addNewPost}/> }\r\n                {PostElement}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst maxLength = maxLengthCreator(300);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div ><Field className={s.input} component={\"textarea\"} name={\"newPostBody\"} placeholder={\"Написать пост\"}\r\n                        validate={[required, maxLength]}/></div>\r\n            <div>\r\n                <button className={s.btn}>Отрправить</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postAddPostForm\"})(AddPostForm);\r\n\r\n/*\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: <span>{contactValue}</span>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\nexport default Main;","import {connect} from \"react-redux\";\r\nimport React from 'react'\r\n\r\nimport Main from \"./Main\";\r\nimport {ADD_NEW_POST_TEXT,} from \"../../../Redux/ActionTypes\";\r\nimport {\r\n    getProfileThunk, savePhoto, setDataProfile,\r\n    setPhotoUser,\r\n\r\n    updateStatusThunk\r\n} from \"../../../Redux/Reducers/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n\r\n        this.props.getProfileThunk(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Main {...this.props} isOwner={!this.props.match.params.userID} />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    profilePage:state.ProfilePageReducer.profilePage,\r\n    newPostText:state.ProfilePageReducer.newPostText,\r\n    photo: state.ProfilePageReducer.photo,\r\n    isFetching: state.UsersPageReducer.isFetching,\r\n    status:state.ProfilePageReducer.status,\r\n    id:state.AuthPageReducer.id,\r\n    profile: state.ProfilePageReducer.profile,\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(newPostBody) => {\r\n            dispatch(ADD_NEW_POST_TEXT(newPostBody))\r\n        },\r\n        setPhotoUser:(photo) => {\r\n            dispatch(setPhotoUser(photo))\r\n        },\r\n        getProfileThunk: (id) => {\r\n            dispatch(getProfileThunk(id))\r\n        },\r\n        updateStatusThunk: (status) => {\r\n            dispatch(updateStatusThunk(status))\r\n        },\r\n        savePhoto: (photos) => {\r\n            dispatch(savePhoto(photos))\r\n        },\r\n\r\n    }\r\n};\r\n\r\n/*let withAuthRedirectCC = withAuthRedirect(MainContainer)\r\n\r\nlet withURLDataContainerComponent = withRouter (withAuthRedirectCC);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withURLDataContainerComponent);*/\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(MainContainer)","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <div >\r\n            <NavLink to={\"/profile/\" + props.u.id}>\r\n                {props.u.name}\r\n                <div><img\r\n                    src={!props.u.photos.large ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1200px-VK.com-logo.svg.png' : props.u.photos.large}\r\n                    alt={props.u.name}/></div>\r\n                <div>{props.status}</div>\r\n            </NavLink>\r\n            {props.u.followed\r\n                ? <button disabled={props.Disabled.some(id => id === props.u.id)}\r\n                          onClick={() => props.unfUser(props.u.id) }> Отписаться </button>\r\n                : <button disabled={props.Disabled.some(id => id === props.u.id)}\r\n                          onClick={ () => props.fUser(props.u.id) }> Подписаться </button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React, {useState} from 'react'\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i =1; i<= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n     return <div className={s.paginator}>\r\n        <button disabled={portionNumber <= 1} onClick={() => { setPortionNumber(portionNumber - 1) }}>Предыдущие</button>\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        <button disabled={portionCount <= portionNumber} onClick={() => { setPortionNumber(portionNumber + 1) }}>Следующие</button>\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css'\r\n\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport User from \"./User\";\r\nimport Paginator from \"../../../common/Paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n\r\n    let fUser = (id) => {\r\n        props.followUserThunk(id);\r\n    };\r\n    let unfUser = (id) => {\r\n    props.unfollowUserThunk(id)\r\n    };\r\n   let onPageChanged = (pageNumber) => {\r\n        props.onPageChangedThunk(pageNumber, props.pageSize)\r\n    };\r\n\r\n    return (\r\n        <div className={s.content}>\r\n\r\n            { props.isFetching ? <Preloader/>\r\n            : <div>\r\n                    <Paginator currentPage={props.currentPage} onPageChanged={onPageChanged}\r\n                               totalItemsCount={props.totalItemsCount} pageSize={props.pageSize}/>\r\n                    {props.users.map(u =>\r\n                        <User u={u} Disabled={props.Disabled} unfUser={unfUser} fUser={fUser} key={u.id} status={props.status} />\r\n                       /* <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            {u.name}\r\n                            <div><img\r\n                                src={!u.photos.large ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1200px-VK.com-logo.svg.png' : u.photos.large}\r\n                                alt={u.name}/></div>\r\n                            </NavLink>\r\n                            {u.followed\r\n                                ? <button disabled={props.Disabled.some(id => id === u.id)}\r\n                                    onClick={() => unfUser(u.id) }> Отписаться </button>\r\n                                : <button disabled={props.Disabled.some(id => id === u.id)}\r\n                                    onClick={ () => fUser(u.id) }> Подписаться </button>}\r\n                        </div>*/\r\n                    )\r\n                    }\r\n                </div>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.UsersPageReducer.users;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPageReducer.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPageReducer.totalUsers\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPageReducer.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPageReducer.isFetching;\r\n};\r\nexport const getDisabled = (state) => {\r\n    return state.UsersPageReducer.isDisabled;\r\n};\r\nexport const getStatusThunk = (state) => {\r\n    return state.ProfilePageReducer.status;\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport React from \"react\"\r\nimport Users from \"./Users\";\r\nimport {\r\n    followUserThunk, getUserAC,\r\n   onPageChangedThunk,\r\n    unfollowUserThunk\r\n} from \"../../../Redux/Reducers/UsersReducer\";\r\nimport {userAPI} from \"./../../../api/api\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getDisabled,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../../Redux/Reducers/usersSelectors\";\r\nimport {getStatusThunk} from \"../../../Redux/Reducers/ProfileReducer\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n            this.props.getUserAC(this.props.currentPage, this.props.pageSize);\r\n            };\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsers/this.props.pageSize);\r\n        let pages = [];\r\n        for (let i =1; i<= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n        return (\r\n             <Users {...this.props}  pages={pages} followUser={userAPI.followUser} unfollowUser={userAPI.unfollowUser}\r\n                    currentPage={this.props.currentPage} totalItemsCount={this.props.totalUsers} pageSize={this.props.pageSize}/>\r\n            )\r\n\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.UsersPageReducer.users,\r\n        pageSize: state.UsersPageReducer.pageSize,\r\n        totalUsers: state.UsersPageReducer.totalUsers,\r\n        currentPage:state.UsersPageReducer.currentPage,\r\n        isFetching: state.UsersPageReducer.isFetching,\r\n        Disabled:state.UsersPageReducer.isDisabled,\r\n\r\n    }\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        Disabled:getDisabled(state),\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserAC,\r\n        followUserThunk,\r\n        unfollowUserThunk,\r\n        onPageChangedThunk,\r\n            getStatusThunk,\r\n    }\r\n    ),\r\n    withAuthRedirect,\r\n)(UsersContainer)\r\n\r\n/*\r\nexport default withAuthRedirect(connect(mapStateToProps, {\r\n    getUserAC,\r\n    followUserThunk,\r\n    unfollowUserThunk,\r\n    onPageChangedThunk,\r\n    }\r\n)(UsersContainer));*/\r\n","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../../common/Preloader\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n    if (!props.profilePage) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    console.log(props.profilePage.photos.large)\r\n\r\n\r\n    return (\r\n        <header className={s.header}>\r\n\r\n            <NavLink to=\"/profile\" activeClassName={s.active} >Моя страница</NavLink>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active} >Сообщения</NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active} >Пользователи</NavLink>\r\n\r\n           {props.isAuth\r\n               ? <div className={s.auth}>{props.login} <img src={!props.profilePage.photos.large\r\n                   ? 'https://avatars.yandex.net/get-music-content/175191/f26e7e1a.p.5821649/m1000x1000'\r\n                   : props.profilePage.photos.large} alt=\"\"/> <NavLink to={\"/login\"} onClick={props.logout}>Выйти</NavLink>\r\n\r\n           </div>\r\n               : <div className={s.auth}><NavLink className={s.logout} to={'/login'}>Войдите</NavLink></div> }\r\n\r\n        </header>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authmeThunk, HelloAC, logout, logoutAC, setUserData} from \"../../Redux/Reducers/AuthReducer\";\r\nimport {setPhotoUser} from \"../../Redux/Reducers/ProfileReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n/*\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.isAuth != prevProps.isAuth ) {\r\n            alert('hello');\r\n        }\r\n    }\r\n*/\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}  />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login:state.AuthPageReducer.login,\r\n        profilePage:state.ProfilePageReducer.profile,\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setUserData,\r\n    setPhotoUser,\r\n    logoutAC,\r\n    //authmeThunk,\r\n    logout,\r\n\r\n})(HeaderContainer);","import React from 'react';\r\nimport s from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport AuthPageReducer, {setDataLoginThunk} from \"../../../Redux/Reducers/AuthReducer\";\r\nimport {Input} from \"../../../common/FormConrols/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../../../common/FormConrols/FormsControls.module.css\"\r\nimport Preloader from \"../../../common/Preloader\";\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.setDataLoginThunk(formData.Login, formData.Password);\r\n        console.log(formData.Password)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n\r\n    if (props.isFetching) {\r\n        return  <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            Авторизация\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n        )\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field placeholder='login' name={\"Login\"} component={Input}\r\n                        validate={[required]}/>  </div>\r\n            <div><Field placeholder='password' name={\"Password\"} type={\"password\"} component={Input}\r\n                        validate={[required]} />  </div>\r\n            <div><Field type='checkbox' name={\"Remember me\"} component={\"c\"} /> Запомнить меня  </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div><button> Войти в акаунт </button></div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\n\r\nconst  LoginReduxForm  = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.AuthPageReducer.isAuth,\r\n    isFetching:state.UsersPageReducer.isFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps,{setDataLoginThunk})(Login);","import {authmeThunk} from \"./AuthReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n};\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n};\r\n\r\nconst setInitialized = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        let promise = dispatch(authmeThunk());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(setInitialized())\r\n        })\r\n};\r\n\r\n\r\nexport default AppReducer;","import React from 'react';\nimport './App.css';\nimport Footer from \"./Component/Footer/Footer\";\nimport Dialogs from \"./Component/Main/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nimport MainContainer from \"./Component/Main/Main/MainContainer\";\nimport UsersContainer from \"./Component/Main/Users/UsersContainer\";\nimport HeaderContainer from \"./Component/Header/HeaderContaine\";\nimport Login from \"./Component/Main/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./Redux/Reducers/AppReducer\";\nimport Preloader from \"./common/Preloader\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return  <Preloader/>\n        }\n\n        return (\n            <div className={\"App\"}>\n                <HeaderContainer/>\n                <Route path='/profile/:userID?' render={() => <MainContainer/>}/>\n                <Route path=\"/dialogs/:userID?\" component={Dialogs}/>\n                <Route path=\"/users\" component={UsersContainer}/>\n                <Route path=\"/login\" component={Login}/>\n\n                <Footer/>\n\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized:state.AppReducer.initialized,\n    }\n};\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport ProfilePageReducer from \"./Reducers/ProfileReducer\";\r\nimport UsersPageReducer from \"./Reducers/UsersReducer\";\r\nimport AuthPageReducer from \"./Reducers/AuthReducer\";\r\nimport { reducer as formReducer  } from  \"redux-form\"\r\nimport AppReducer from \"./Reducers/AppReducer\";\r\nimport dialogsReducer from \"./Reducers/DialogReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePageReducer,\r\n    UsersPageReducer,\r\n    AuthPageReducer,\r\n    form:formReducer,\r\n    AppReducer,\r\n    dialogsReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/ReduxStore\"\n\n\n\n //let rerenderEntireTree = (state) => {\n     ReactDOM.render(\n\n         <React.StrictMode>\n             <BrowserRouter>\n                 <Provider store={store} >\n                     <App  />\n                 </Provider>\n             </BrowserRouter>\n         </React.StrictMode>,\n         document.getElementById('root')\n     );\n //};\n\n//rerenderEntireTree(store.getState());\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1dvtT\",\"img\":\"Footer_img__1lQzi\",\"imgMessages\":\"Footer_imgMessages__1ACES\",\"active\":\"Footer_active__1A6_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__318n1\",\"active\":\"Header_active__1tsaU\",\"auth\":\"Header_auth__2-Am-\",\"logout\":\"Header_logout__17PEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1nahg\",\"error\":\"FormsControls_error__c9KbS\",\"formSummaryError\":\"FormsControls_formSummaryError__A9BDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__3Bs3o\",\"ava\":\"Main_ava__1o9-r\",\"me\":\"Main_me__3UC4q\",\"posts\":\"Main_posts__lOreb\",\"input\":\"Main_input__1jIeW\",\"btn\":\"Main_btn__1fyob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageArea\":\"MessageArea_MessageArea__3LRkz\",\"right\":\"MessageArea_right__1Vt9Y\",\"message\":\"MessageArea_message__3wlk0\",\"text\":\"MessageArea_text__2syYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2V2IF\",\"postArea\":\"Post_postArea__3QaqU\",\"postName\":\"Post_postName__3RciP\",\"postText\":\"Post_postText__1qnie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"me\":\"Me_me__mJ2AC\",\"nameme\":\"Me_nameme__3nqDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__bIMn1\",\"DialogItem\":\"Message_DialogItem__2u7aY\",\"active\":\"Message_active__2Ajpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3Vy7T\",\"pageNumber\":\"Paginator_pageNumber__3M7aO\",\"selectedPage\":\"Paginator_selectedPage__1sbx3\"};"],"sourceRoot":""}