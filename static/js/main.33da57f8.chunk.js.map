{"version":3,"sources":["Component/Main/Dialogs/Message/Message.module.css","Component/Main/Users/User.module.css","common/Paginator/Paginator.module.css","Component/Main/Dialogs/Dialogs.module.css","common/images/preloader.svg","common/Preloader.module.css","Component/Main/Main/Description/Description.module.css","Component/Main/Users/Users.module.css","common/FormConrols/FormsControls.module.css","Component/Main/Dialogs/MessageArea/MessageArea.module.css","utils/validators/validators.js","Component/Footer/Footer.jsx","common/Preloader.jsx","Component/Main/Dialogs/Me/Me.jsx","hoc/withAuthRedirect.jsx","api/api.js","utils/objectHelplers.js","Redux/Reducers/UsersReducer.ts","Redux/ActionTypes.js","Redux/Reducers/ProfileReducer.ts","Component/Main/Dialogs/Me/MeContainer.jsx","hoc/withProfileInfo.jsx","Component/Main/Dialogs/Message/Message.jsx","Component/Main/Dialogs/Message/MessageContainer.jsx","Component/Main/Dialogs/MessageArea/MessageArea.jsx","Redux/Reducers/DialogReducer.js","Component/Main/Dialogs/MessageArea/MessageAreaContainer.jsx","Component/Main/Dialogs/Dialogs.jsx","Component/Main/Main/Post/Post.jsx","Component/Main/Main/Status/StatusWithHook.jsx","Component/Main/Main/Description/Description.jsx","Component/Main/Main/Description/DescriptionContainer.jsx","Component/Main/Main/Main.jsx","Component/Main/Main/MainContainer.jsx","Component/Main/Users/User.jsx","common/Paginator/Paginator.jsx","Component/Main/Users/Users.jsx","Redux/Reducers/usersSelectors.js","Component/Main/Users/UsersContainer.jsx","Component/Header/Header.jsx","Redux/Reducers/AuthReducer.ts","Component/Header/HeaderContaine.jsx","Component/Main/Login/Login.jsx","Redux/Reducers/AppReducer.ts","App.js","serviceWorker.js","Redux/ReduxStore.jsx","index.js","Component/Main/Main/Main.module.css","Component/Footer/Footer.module.css","Component/Header/Header.module.css","Component/Main/Dialogs/Me/Me.module.css","Component/Main/Main/Post/Post.module.css","Component/Main/Login/Login.module.css"],"names":["module","exports","maxaValue","Footer","props","className","s","footer","to","activeClassName","active","img","src","alt","imgMessages","Preloader","preloader","PreloaderImg","Me","profile","id","match","params","userID","me","nameme","nameP","fullName","photos","large","pr","nameUser","dialogsReducer","users","name","mapStateToProps","state","isAuth","AuthPageReducer","withAuthRedirect","Component","RedirectComponent","this","React","connect","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","post","resultCode","unfollowUser","delete","authAPI","email","password","rememberMe","profileAPI","setStatus","put","status","photoFile","formData","FormData","append","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","initialState","totalUsers","isFetching","isDisabled","setUsers","type","SET_USERS","follow","FOLLOW_USER","unfollow","UNFOLLOW_USER","bool","IS_DISABLED","IS_FETCHING","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","UsersPageReducer","action","followed","totalCount","filter","ADD_NEW_POST_TEXT","text","profilePage","photo","newPostText","setPhotoUser","setStatusUser","getStatusThunk","getProfileThunk","ProfilePageReducer","MeContainer","compose","withRouter","withProfileInfo","login","DialogItem","Dialogs","PersonElement","p","key","dialogs","Message","MessageArea","useState","message","setMessage","console","log","messages","MessageElements","m","cn","right","isYou","pageNumber","flex","messageText","NameP","value","onChange","e","target","onClick","Id","addMessage","idUser","abc","userMessages","content","MessageContainer","MessageAreaContainer","Post","imgAva","postArea","postName","fullname","postText","required","StatusHook","editMode","setEditMode","useEffect","activateEditeMode","currentTarget","onBlur","updateStatus","autoFocus","color","DescriptoinStatusForm","reduxForm","form","setFullName","contacts","github","setGithub","vk","setVk","Profile","aboutMe","lookingForAJobDescription","facebook","website","twitter","instagram","youtube","mainLink","saveProfile","saveInfo","placeholder","isOwner","lookingForAJob","Object","keys","contactTitle","contactValue","Contact","getState","alert","Description","maxLength","length","AddPostFormRedux","onSubmit","handleSubmit","Field","input","component","validate","btn","Main","PostElement","ava","files","savePhoto","updateStatusThunk","zero","DescriptionContainer","posts","postData","addPost","newPostBody","reverse","MainContainer","refreshProfile","prevProps","prevState","snapshot","file","User","user","disabled","Disabled","some","unfUser","fUser","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","selectedPage","Users","followUserThunk","unfollowUserThunk","onPageChangedThunk","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getDisabled","UsersContainer","getUserAC","bind","Header","header","auth","logout","hello","setUserData","payload","authmeThunk","HeaderContainer","logoutAC","NormalLoginForm","initialValues","remember","onFinish","values","setDataLoginThunk","username","Item","rules","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","href","loading","htmlType","stopSubmit","_error","main","block","wrapper","initialized","AppReducer","App","initializeApp","HeaderContaine","path","render","Login","promise","Promise","all","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.33da57f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__bIMn1\",\"DialogItem\":\"Message_DialogItem__2u7aY\",\"active\":\"Message_active__2Ajpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2PbJK\",\"unfollow\":\"User_unfollow__28lBY\",\"follow\":\"User_follow__2IeDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3Vy7T\",\"pageNumber\":\"Paginator_pageNumber__3M7aO\",\"selectedPage\":\"Paginator_selectedPage__1sbx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content___OaR_\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.b6d3f9e9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1M2-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Description_content__1iUNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Users_content__19OzP\",\"selectedPage\":\"Users_selectedPage__1q73A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1nahg\",\"error\":\"FormsControls_error__c9KbS\",\"formSummaryError\":\"FormsControls_formSummaryError__A9BDQ\",\"Input\":\"FormsControls_Input__2WS12\",\"Label\":\"FormsControls_Label__3v14V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageArea\":\"MessageArea_MessageArea__3LRkz\",\"right\":\"MessageArea_right__1Vt9Y\",\"message\":\"MessageArea_message__3wlk0\",\"text\":\"MessageArea_text__2syYp\",\"img\":\"MessageArea_img__uBtqj\",\"flex\":\"MessageArea_flex__2vXtI\",\"messageText\":\"MessageArea_messageText__2qX4Z\",\"NameP\":\"MessageArea_NameP__2Whzw\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Поле обязательное для ввода!\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxaValue) => (value) => {\r\n    if ( value.length > maxaValue) return `Максимальное значение ${maxaValue} символов!`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport s from './Footer.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <NavLink to=\"/profile\" activeClassName={s.active}><img className={s.img} src=\"https://cdn4.iconfinder.com/data/icons/evil-icons-user-interface/64/avatar-512.png\" alt=\"Profile\"/></NavLink>\r\n\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}><img className={s.imgMessages} src=\"https://www.logolynx.com/images/logolynx/75/75189e2b07df0d2a8cc42dee4cf889b7.png\" alt=\"messages\"/></NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active}><img className={s.img} src=\"https://icons.iconarchive.com/icons/custom-icon-design/pretty-office-13/512/Users-icon.png\" alt=\"\"/>\r\n            </NavLink>\r\n        </footer>\r\n\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport PreloaderImg from './images/preloader.svg'\r\n\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader = (props) => {\r\n\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={PreloaderImg} alt=\"\"/>\r\n{/*\r\n            <h1>Загрузка...</h1>\r\n*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport s from './Me.module.css'\r\nimport Preloader from \"../../../../common/Preloader\";\r\n\r\n\r\nconst Me = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    let id = props.match.params.userID;\r\n\r\n    return (\r\n        <div className={s.me} id=\"navbar\">\r\n            <div className={s.nameme}>\r\n                <div>Вы:</div>\r\n                <div className={s.nameP}>{props.profile.fullName}</div>\r\n\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n            </div>\r\n                {props.match.params.userID && <div className={s.pr}>\r\n                    <div className={s.nameUser}> Пользователь:\r\n                        <div className={s.nameP}>{props.dialogsReducer.users[id - 1].name}</div></div>\r\n                    <img\r\n                        src={props.dialogsReducer.users[id - 1].img}\r\n                        alt=\"\"/>\r\n                </div>}\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Me;\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" /> ;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectAuthRedirectComponent;\r\n};\r\n\r\n\r\n","import * as axios from \"axios\";\r\n\r\n//let URL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"be820c73-af0b-4ffa-9553-5bd0d04425d6\"\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    followUser(userID) {\r\n        return instance.post(`follow/${userID}`).then(response => {\r\n            return response.data.resultCode\r\n        })\r\n    },\r\n    unfollowUser(userID) {\r\n        return instance.delete(`follow/${userID}`).then(response => {\r\n            return response.data.resultCode\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const authAPI  = {\r\n    authme() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login` , {email, password, rememberMe} )\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\n\r\nexport const profileAPI = {\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`).then (response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfile(userID){\r\n        return instance.get(`profile/${userID}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateStatus(setStatus) {\r\n        return instance.put(`profile/status`, {status: setStatus}).then(response =>{\r\n            return response\r\n        })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile (profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {userAPI} from \"../../api/api\";\r\nimport {updateObjectInArray} from \"../../utils/objectHelplers\";\r\nimport {PhotosType, UsersType} from \"../../Types/types\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UsersType> ,\r\n    pageSize: 25,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isDisabled: [] as Array<number>,\r\n    status:''\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst UsersPageReducer = (state = initialState, action:any):InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID,\"id\" ,{followed:true})\r\n            };\r\n        case UNFOLLOW_USER: {\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users, action.userID,\"id\" ,{followed:false} )\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalCount\r\n            }\r\n        }\r\n        case IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.bool\r\n            }\r\n        }\r\n        case IS_DISABLED: {\r\n            return {\r\n                ...state,\r\n                isDisabled: action.bool\r\n                    ? [...state.isDisabled, action.id]\r\n                    : state.isDisabled.filter(id => id !== action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\ntype SetUsers = {\r\n    type: typeof SET_USERS\r\n    users: Array<UsersType>\r\n}\r\nexport const setUsers = (users:Array<UsersType>):SetUsers => ({type: SET_USERS, users});\r\ntype SetCurrent = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrent = (currentPage: number):SetCurrent => ({type: SET_CURRENT_PAGE, currentPage});\r\ntype SetTotalUsersCount = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalCount: number\r\n}\r\nexport const setTotalUsersCount = (totalCount: number):SetTotalUsersCount => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\ntype Follow = {\r\n    type: typeof FOLLOW_USER\r\n    userID: number\r\n}\r\nexport const follow = (userID: number):Follow => {\r\n    return {\r\n        type: FOLLOW_USER,\r\n        userID\r\n    }\r\n};\r\ntype Unfollow = {\r\n    type: typeof UNFOLLOW_USER\r\n    userID: number\r\n}\r\nexport const unfollow = (userID: number):Unfollow => {\r\n    return {\r\n        type: UNFOLLOW_USER,\r\n        userID\r\n    }\r\n};\r\ntype IsDisabled = {\r\n    type: typeof IS_DISABLED\r\n    bool: boolean,\r\n    id: number\r\n}\r\nexport const isDisabled = (bool: boolean, id: number):IsDisabled => {\r\n    return ({type: IS_DISABLED, bool, id})\r\n};\r\ntype IsFetching = {\r\n    type: typeof IS_FETCHING\r\n    bool: boolean\r\n}\r\nexport const isFetching = (bool: boolean):IsFetching => ({type: IS_FETCHING, bool });\r\n\r\n\r\nexport const SET_USERS = \"SET_USERS\";\r\n\r\nconst FOLLOW_USER = \"FOLLOW_USER\";\r\nconst UNFOLLOW_USER = \"UNFOLLOW_USER\";\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\n\r\nconst IS_DISABLED = 'IS_DISABLED';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\n\r\nexport const getUserAC = (currentPage:number, pageSize:number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(isFetching(true));\r\n        let response = await userAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount));\r\n        dispatch(isFetching(false))\r\n    }\r\n};\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch:any, id:number, apiMethod:any, actionCreator:any ) => {\r\n    dispatch(isDisabled(true, id));\r\n    let response = await apiMethod(id);\r\n    if (response === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(isDisabled(false, id))\r\n};\r\nexport const followUserThunk = (id:number) => async (dispatch: any) => {\r\n    let apiMethod = userAPI.followUser.bind(userAPI);\r\n    let actionCreator = follow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n};\r\nexport const unfollowUserThunk = (id:number) => async (dispatch:any) => {\r\n    let apiMethod = userAPI.unfollowUser.bind(userAPI);\r\n    let actionCreator = unfollow;\r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n};\r\n\r\nexport const onPageChangedThunk = (pageNumber: number, pageSize: number) => async (dispatch:any) => {\r\n    //dispatch(isFetchingTrue());\r\n    dispatch(isFetching(true));\r\n    dispatch(setCurrent(pageNumber));\r\n    let response = await userAPI.getUsers(pageNumber, pageSize);\r\n    dispatch(setUsers(response.items));\r\n    //dispatch(isFetchingFalse());\r\n    dispatch(isFetching(false))\r\n};\r\n\r\nexport default UsersPageReducer;","import {SET_USERS} from \"./Reducers/UsersReducer\";\r\n\r\n\r\n\r\nexport const ADD_NEW_POST_TEXT = (text) => {\r\n    return {\r\n        type: ADD_NEW_POST_TEXT,\r\n        text\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};","import {ADD_NEW_POST_TEXT} from \"../ActionTypes\";\r\nimport {profileAPI} from \"../../api/api\";\r\nimport {isFetching} from \"./UsersReducer\";\r\nimport {ProfilePageType, ProfileType} from \"../../Types/types\";\r\n\r\nconst SET_STATUS_USER = \"SET_STATUS_USER\";\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_PHOTO_USER = 'SET_PHOTO_USER';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n\r\n    profilePage: [\r\n        {\r\n            id: 1,\r\n            text: \"Привет\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            text: \"Как дела?\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        },\r\n        {\r\n            id: 3,\r\n            text: \"Что нового?\",\r\n            name: \"Валерий Цепкало\",\r\n            img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n        }\r\n    ] as Array<ProfilePageType>,\r\n    photo: '',\r\n    status: \"\",\r\n    profile: null as ProfileType | null,\r\n    newPostText: \"\",\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst ProfilePageReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST_TEXT: {\r\n\r\n            let newPostText = {\r\n                id: 5,\r\n                text: action.text,\r\n                name: \"Валерий Цепкало\",\r\n                img: \"https://officelife.media/upload/iblock/a67/a673bdc2396a44e83b19b8a1665800d0.jpg\"\r\n            };\r\n            return {\r\n                ...state,\r\n                profilePage: [...state.profilePage, newPostText],\r\n                newPostText: action.text,\r\n\r\n            }\r\n        }\r\n        case SET_PHOTO_USER: {\r\n            return {\r\n                ...state,\r\n                photo: action.photo\r\n            }\r\n        }\r\n        case SET_STATUS_USER: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, photo: action.photos};\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\ntype SetPhotoUserType = {\r\n    type: typeof SET_PHOTO_USER\r\n    photo: string\r\n}\r\nexport const setPhotoUser = (photo: string):SetPhotoUserType => ({type: SET_PHOTO_USER, photo});\r\ntype SetStatusUser = {\r\n    type: typeof SET_STATUS_USER\r\n    status: string\r\n}\r\nexport const setStatusUser = (status: string): SetStatusUser => ({type: SET_STATUS_USER, status});\r\ntype savePhotoSuccess = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: string\r\n}\r\nexport const savePhotoSuccess = (photos:string):savePhotoSuccess => ({type: SAVE_PHOTO_SUCCESS, photos});\r\ntype setUserProfile = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile:ProfileType):setUserProfile => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const getStatusThunk = (id: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(id);\r\n    dispatch(setStatusUser(response))\r\n};\r\n\r\nexport const getProfileThunk = (userID : number) => async (dispatch: any) => {\r\n    dispatch(isFetching(true));\r\n    let response = await profileAPI.getProfile(userID);\r\n    dispatch(setPhotoUser(response.photos.large));\r\n    dispatch(setUserProfile(response));\r\n    dispatch(getStatusThunk(userID));\r\n    dispatch(isFetching(false))\r\n};\r\n\r\nexport const updateStatusThunk = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatusUser(status))\r\n    }\r\n};\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userID = getState().AuthPageReducer.id;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfileThunk(userID))\r\n    } else {\r\n        alert('Ошибка в валидации')\r\n        //alert(`Ошибка в валидации: ${response.data.messages.map(e => e)}`)\r\n\r\n        /*\r\n                dispatch(isFetching(true));\r\n        */\r\n    }\r\n};\r\n/*export const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfileThunk(userId));\r\n    } else {\r\n        /!*dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);*!/\r\n    }\r\n};*/\r\n\r\nexport default ProfilePageReducer;","import {connect} from \"react-redux\";\r\nimport React from 'react'\r\n\r\nimport Me from \"./Me\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withProfileInfo} from \"../../../../hoc/withProfileInfo\";\r\n\r\n\r\nclass MeContainer extends React.Component {\r\n\r\n/*\r\n\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n\r\n        this.props.getProfileThunk(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n*/\r\n\r\n    render() {\r\n        return <Me {...this.props} /*isOwner={!this.props.match.params.userID}*/ />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n\r\n    profile: state.ProfilePageReducer.profile,\r\n    dialogsReducer:state.dialogsReducer,\r\n\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n    withProfileInfo,\r\n)(MeContainer)","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk} from \"../Redux/Reducers/ProfileReducer\";\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};*/\r\n\r\nexport const withProfileInfo = (Component) => {\r\n\r\n\r\n\r\n    class withProfileInfo extends React.Component {\r\n\r\n        componentDidMount() {\r\n            this.props.getProfileThunk(this.props.id)\r\n        }\r\n\r\n        render() {\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => ( {\r\n        login:state.AuthPageReducer.login,\r\n        id:state.AuthPageReducer.id,\r\n        /*newPostText:state.ProfilePageReducer.newPostText,\r\n        photo: state.ProfilePageReducer.photo,\r\n        isFetching: state.UsersPageReducer.isFetching,\r\n        status:state.ProfilePageReducer.status,\r\n        id:state.AuthPageReducer.id,\r\n        profile: state.ProfilePageReducer.profile,*/\r\n    });\r\n\r\n\r\n    let ConnectProfileInfoComponent = connect(mapStateToProps, {getProfileThunk})(withProfileInfo);\r\n    return ConnectProfileInfoComponent;\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Message.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let PersonElement = props.dialogsReducer.users.map(p => (\r\n        <NavLink key={p.id} activeClassName={s.active} to={`/dialogs/${p.id}`}><DialogItem  name={p.name} img={p.img} /></NavLink>\r\n    ));\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            {PersonElement}\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\nconst DialogItem = ({name, img}) => {\r\n    return <div className={s.DialogItem}>\r\n        <div><img src={img} alt=\"\"/></div>\r\n        <div>{name}</div>\r\n    </div>\r\n};\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\n/*\r\nimport React from 'react'\r\n*/\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Message from \"./Message\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    dialogsReducer:state.dialogsReducer,\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n    /*withProfileInfo,*/\r\n)(Message)","import React, {useState} from 'react';\r\nimport s from './MessageArea.module.css'\r\nimport cn from \"classnames\";\r\nimport Preloader from \"../../../../common/Preloader\";\r\n\r\n\r\n\r\nconst MessageArea = (props) => {\r\n\r\n    const [message, setMessage] = useState('ddd');\r\n\r\n    const ga = () => {\r\n        alert(message)\r\n    };\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let id = props.match.params.userID;\r\n\r\n    if (props.match.params.userID) {\r\n\r\n        debugger\r\n        console.log('messElement', props.dialogsReducer.messages[props.match.params.userID - 1])\r\n\r\n        let MessageElements = props.dialogsReducer.messages[props.match.params.userID - 1]/*.a*/.map(m => (\r\n            <div key={m.id} className={ cn({\r\n                [s.right]: m.isYou, [s.message]: true\r\n            }, s.pageNumber) }>\r\n                <div className={s.flex}>\r\n                    <div>\r\n                        <img className={s.img} src={m.isYou ? props.dialogsReducer.users[id-1].img : props.profile.photos.large} alt=\"\"/>\r\n                    </div>\r\n                    <div className={s.messageText }><span className={s.NameP}>\r\n                        {m.isYou ? props.dialogsReducer.users[id-1].name : props.profile.fullName }:\r\n                    </span></div>\r\n\r\n                    <div className={s.messageText}><span className={s.text}>{m.message}</span></div>\r\n                </div>\r\n\r\n            </div>\r\n        ));\r\n\r\n        const addMessage = (Id) => {\r\n            console.log('test', props.dialogsReducer.messages[props.match.params.userID - 1])\r\n            props.addMessage(Id)\r\n        };\r\n\r\n        return (\r\n            <div className={s.MessageArea}>\r\n                {MessageElements}\r\n                <div>\r\n                    <input value={message}\r\n                           onChange={(e) => setMessage(e.target.value) }\r\n                           type=\"text\"/>\r\n                    <button onClick={() => addMessage(id)}>Отправить</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return <span></span>\r\n    }\r\n\r\n};\r\n\r\nexport default MessageArea;","const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            name: 'Светозар Трубецкой',\r\n            img: 'https://img04.rl0.ru/4c3a6c57c2a08a723214ba61ff9b2aef/c615x400i/news.rambler.ru/img/2017/08/31115059.047592.2664.jpeg'\r\n        },\r\n        {id: 2, name: 'Милица Голицына', img: 'https://pbs.twimg.com/profile_images/811139177341485056/hvSO9ut1.jpg'},\r\n        {\r\n            id: 3,\r\n            name: 'Любомир Ягужинский',\r\n            img: 'https://storage.myseldon.com/news_pict_05/05E7E5C9CE6AA09669C839A987C3080C'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Добрыня Алтуфьев',\r\n            img: 'https://sun9-33.userapi.com/impf/c638418/v638418588/4a9e7/PUUC3W2ihCA.jpg?size=400x0&quality=90&sign=b34a698aa4dfc7fc4851449f08824abb&ava=1'\r\n        },\r\n    ],\r\n    messages: [\r\n         [\r\n            {id: 1, message: 'Привет приятель!', isYou: false},\r\n            {id: 2, message: 'Приветсвую))', isYou: true},\r\n            {id: 3, message: 'Как делишки?', isYou: true},\r\n            {id: 4, message: 'Ну такое....', isYou: false},\r\n            {id: 5, message: 'А что случилось?', isYou: true},\r\n            {id: 6, message: 'В школе двойку получил:(', isYou: false},\r\n            {id: 7, message: 'Ну не растраивайся, все норм будет!', isYou: true},\r\n        ],\r\n        [{id: 1, message: '2edsfd', isYou: false},\r\n            {id: 2, message: 'dfdf dfdf dsd it-sdsd?', isYou: true},\r\n            {id: 3, message: 'fddfdf', isYou: true},\r\n            {id: 4, message: 'dffdf', isYou: false},\r\n            {id: 5, message: 'dfdfdf', isYou: true},],\r\n        /*        {a:[{id: 1, message: 'dfdfdfdfdfd', isYou: false},\r\n                        {id: 2, message: 'dfdf is dsd dfdf-sdsd?', isYou: true},\r\n                        {id: 3, message: 'qwq   wewe', isYou: true},\r\n                        {id: 4, message: 'fdfdfdf', isYou: false},\r\n                        {id: 5, message: 'fdf', isYou: true},]},\r\n                {a:[{id: 1, message: 'l;kwe;lmlksmd', isYou: false},\r\n                        {id: 2, message: 'Hdsow is dsd it-wewe?', isYou: true},\r\n                        {id: 3, message: 'dfdf', isYou: true},\r\n                        {id: 4, message: 'dfdf', isYou: false},\r\n                        {id: 5, message: 'ewdsdsd', isYou: true},]},*/\r\n    ],\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n\r\n/*            let idUser = action.id - 1;\r\n            let a = state.messages[idUser];\r\n            debugger\r\n\r\n            console.log('reducer', state.messages[idUser]);*/\r\n            let idUser = action.id - 1;\r\n            let abc = {\r\n                id: 11,\r\n                message: 'hui',\r\n                isYou: true\r\n            };\r\n\r\n            return  {\r\n                ...state,\r\n                messages: state.messages.map(userMessages => {\r\n                    if (userMessages[idUser+1] === action.id) {\r\n                        return {...userMessages, abc}\r\n                    }\r\n                    debugger\r\n                    return userMessages;\r\n                })\r\n            }\r\n        }\r\n\r\n/*            return {\r\n                ...state,\r\n                messages: state.messages[idUser].push({\r\n                    id: 11,\r\n                    message: 'hui',\r\n                    isYou: true\r\n                })/!*, {id: 11, message: 'hui', isYou: true} *!/,\r\n\r\n            }\r\n\r\n        }*/\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const addMessage = (id) => ({type: ADD_MESSAGE, id});\r\n\r\n\r\nexport default dialogsReducer;","import {connect} from \"react-redux\";\r\n\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MessageArea from \"./MessageArea\";\r\nimport {addMessage} from \"../../../../Redux/Reducers/DialogReducer\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    dialogsReducer:state.dialogsReducer,\r\n    profile: state.ProfilePageReducer.profile,\r\n\r\n});\r\n\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps,{addMessage} ),\r\n    withRouter,\r\n    withAuthRedirect,\r\n    /*withProfileInfo,*/\r\n)(MessageArea)","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport MeContainer from \"./Me/MeContainer\";\r\nimport MessageContainer from \"./Message/MessageContainer\";\r\nimport MessageAreaContainer from \"./MessageArea/MessageAreaContainer\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <MeContainer />\r\n            <MessageContainer />\r\n            <MessageAreaContainer />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={s.post}>\r\n\r\n            <img className={s.imgAva} src={props.photo\r\n            || 'https://img8.eadaily.com/r650x450/o/7ac/95f49146b4501082acd22918d4cc2.jpg'} alt={props.name}/>\r\n\r\n            <div className={s.postArea}>\r\n                <div className={s.postName}>\r\n                    {props.fullname}\r\n                </div>\r\n                <div className={s.postText}>\r\n                    {props.text}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Post;","import React, {useEffect, useState} from \"react\";\r\n\r\nimport s from './StatusWithHook.module.css'\r\nconst StatusHook = (props) => {\r\n\r\n    let userID = props.userID;\r\n    if (!userID) {\r\n        userID = props.id;\r\n    }\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const activateEditeMode = () => {\r\n        setEditMode(true)\r\n\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            {editMode\r\n                ? (props.id === userID)\r\n                    ? <div> <input onChange={onStatusChange} onBlur={deactivateEditeMode}\r\n                                autoFocus={true} value={status} /></div>\r\n                    : <div onClick={activateEditeMode }><span className={s.color}>Статус:</span>{props.status || <span>3% </span>}</div>\r\n                :  <div onClick={activateEditeMode }>Status:{props.status || <span>3% </span>}</div>\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default StatusHook;","import React, {useState} from 'react';\r\nimport {/*Field,*/ reduxForm} from \"redux-form\";\r\n/*\r\nimport {Input} from \"../../../../common/FormConrols/FormsControls\";\r\n*/\r\nimport s from './Description.module.css';\r\n/*\r\nimport Preloader from \"../../../../common/Preloader\";\r\n*/\r\n\r\n\r\n\r\nconst Description = (/*{contacts, lookingForAJob, handleSubmit, isOwner, saveProfile, } ,*/props) => {\r\n\r\n\r\n\r\n\r\n    const [fullName, setFullName] = useState( props.profile.fullName);\r\n    const [github, setGithub] = useState( props.contacts.github);\r\n    const [vk, setVk] = useState( props.contacts.vk);\r\n\r\n\r\n    const Profile = {\r\n\r\n            aboutMe: 'aboutMe',\r\n            lookingForAJobDescription: 'Я не шучу, а играюсь',\r\n            fullName: fullName,\r\n            contacts: {\r\n                facebook: '',\r\n                website: '',\r\n                vk: vk,\r\n                twitter: '',\r\n                instagram: '',\r\n                youtube: '',\r\n                github: github,\r\n                mainLink: '',\r\n\r\n\r\n            }\r\n        };\r\n\r\n\r\n\r\n    const saveInfo = (Profile) => {\r\n        return props.saveProfile(Profile).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    };\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return <div className={s.content}>\r\n            {editMode\r\n                ? <div>\r\n{/*\r\n                    <form onSubmit={handleSubmit}>\r\n*/}\r\n                        <button onClick={ () => saveInfo(Profile)}>Сохранить изменения</button>\r\n                        <input type=\"text\"/>\r\n                        <div>  <input type={'text'} placeholder={'Введите ваше имя и фамилию'} value={fullName} onChange={e => setFullName(e.currentTarget.value)}/> </div>\r\n                        <div>  <input type={'text'} placeholder={'Введите ссылку на ваш vk'} value={vk} onChange={e => setVk(e.currentTarget.value)}/> </div>\r\n                        <div>  <input type={'text'} placeholder={'Введите ссылку на ваш github'} value={github} onChange={e => setGithub(e.currentTarget.value)}/> </div>\r\n                        {/*<div><Field type='text' placeholder={'Введите ссылку на facebook'} name={'facebook'} component={Input} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на сайт'} name={'website'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на вк'} name={'vk'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на twitter'} name={'twitter'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на instagram'} name={'instagram'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на youtube'} name={'youtube'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на youtube'} name={'youtube'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на github'} name={'github'} component={'input'} /></div>\r\n                        <div><Field type='text' placeholder={'Введите ссылку на mainLink'} name={'mainLink'} component={'input'} /></div>*/}\r\n{/*\r\n                    </form>\r\n*/}\r\n                  </div>\r\n                : <div>\r\n                    {props.isOwner ?<button onClick={() => setEditMode(true)}>Изменить данные</button> : <div> </div>}\r\n                    <div>{props.lookingForAJob ? <div>Ищу работу</div> : <div>Не ищу работу</div>}</div>\r\n\r\n                    <div>\r\n                        <b>Контакты</b>: {\r\n                        Object.keys(props.contacts).map(key => {\r\n                            return <Contact key={key} contactTitle={key} contactValue={props.contacts[key]}/>\r\n                        })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            }\r\n    </div>\r\n};\r\n\r\n\r\nconst DescriptoinStatusForm = reduxForm({\r\n    form: 'descriptionStatus'\r\n})(Description);\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        {!!contactValue && <div><b>{contactTitle}</b> <span>{contactValue}</span> </div>}\r\n    </div>\r\n};\r\n\r\n\r\nexport default DescriptoinStatusForm;","import {connect} from \"react-redux\";\r\nimport Description from \"./Description\";\r\nimport {saveProfile} from \"../../../../Redux/Reducers/ProfileReducer\";\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    profile:state.ProfilePageReducer.profile\r\n});\r\n\r\nexport default connect(mapStateToProps,{saveProfile})(Description)","import React from 'react';\r\nimport s from './Main.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport StatusHook from \"./Status/StatusWithHook\";\r\nimport DescriptionContainer from \"./Description/DescriptionContainer\";\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const handleSubmit = (formData) => {\r\n        console.log('formData', formData)\r\n    };\r\n    let PostElement = props.profilePage.map(p => <Post img={p.img} text={p.text} key={p.id}\r\n                                                       name={p.name} fullname={props.profile.fullName}\r\n                                                       photo={props.profile.photos.large}/>);\r\n\r\n    const addNewPost = (postData) => {\r\n        props.addPost(postData.newPostBody)\r\n    };\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            {props.isFetching ? <Preloader/>\r\n                : <div className={s.ava}>\r\n                    <img\r\n                        src={!props.photo ? 'https://img8.eadaily.com/r650x450/o/7ac/95f49146b4501082acd22918d4cc2.jpg' : props.photo}\r\n                        alt=\"\"/>\r\n                    {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n            }\r\n            <div className={s.me}>\r\n                {props.profile.fullName}\r\n                <StatusHook status={props.status} updateStatus={props.updateStatusThunk} id={props.id}\r\n                            userID={props.match.params.userID}/>\r\n\r\n                <div>Обо мне: {props.profile.aboutMe}</div>\r\n            </div>\r\n            {!props.isOwner && <div className={s.zero}></div>}\r\n            <DescriptionContainer handleSubmit={handleSubmit} contacts={props.profile.contacts}\r\n                                  lookingForAJob={props.lookingForAJob} isOwner={props.isOwner}/>\r\n            {props.isOwner && <div className={s.posts}>\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n                {PostElement.reverse()}\r\n            </div>}\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst maxLength = maxLengthCreator(300);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form className={s.form} onSubmit={props.handleSubmit}>\r\n            <div><Field className={s.input} component={\"textarea\"} name={\"newPostBody\"} placeholder={\"Написать пост\"}\r\n                        validate={[required, maxLength]}/></div>\r\n            <div>\r\n                <button className={s.btn}>Отрправить</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postAddPostForm\"})(AddPostForm);\r\n\r\nexport default Main;","import {connect} from \"react-redux\";\r\nimport React from 'react'\r\n\r\nimport Main from \"./Main\";\r\nimport {ADD_NEW_POST_TEXT,} from \"../../../Redux/ActionTypes\";\r\nimport {\r\n    getProfileThunk, savePhoto,\r\n    setPhotoUser,\r\n\r\n    updateStatusThunk\r\n} from \"../../../Redux/Reducers/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.id;\r\n        }\r\n\r\n        this.props.getProfileThunk(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID !== prevProps.match.params.userID ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Main {...this.props} isOwner={!this.props.match.params.userID} />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    profilePage:state.ProfilePageReducer.profilePage,\r\n    newPostText:state.ProfilePageReducer.newPostText,\r\n    photo: state.ProfilePageReducer.photo,\r\n    isFetching: state.UsersPageReducer.isFetching,\r\n    status:state.ProfilePageReducer.status,\r\n    id:state.AuthPageReducer.id,\r\n    profile: state.ProfilePageReducer.profile,\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(newPostBody) => {\r\n            dispatch(ADD_NEW_POST_TEXT(newPostBody))\r\n        },\r\n        setPhotoUser:(photo) => {\r\n            dispatch(setPhotoUser(photo))\r\n        },\r\n        getProfileThunk: (id) => {\r\n            dispatch(getProfileThunk(id))\r\n        },\r\n        updateStatusThunk: (status) => {\r\n            dispatch(updateStatusThunk(status))\r\n        },\r\n        savePhoto: (photos) => {\r\n            dispatch(savePhoto(photos))\r\n        },\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(MainContainer)","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './User.module.css'\r\n\r\n\r\nconst User = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <NavLink to={\"/profile/\" + props.u.id}>\r\n                <div>Имя пользователя: {props.u.name} </div>\r\n                <div><img\r\n                    src={!props.u.photos.large ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1200px-VK.com-logo.svg.png' : props.u.photos.large}\r\n                    alt={props.u.name}/></div>\r\n                <div>{props.status && <div>Cтатус: {props.status} </div>}</div>\r\n            </NavLink>\r\n            {props.u.followed\r\n                ? <button className={s.unfollow} disabled={props.Disabled.some(id => id === props.u.id)}\r\n                          onClick={() => props.unfUser(props.u.id) }> Отписаться </button>\r\n                : <button className={s.follow} disabled={props.Disabled.some(id => id === props.u.id)}\r\n                          onClick={ () => props.fUser(props.u.id) }> Подписаться </button>}\r\n\r\n{/*\r\n                          <div>{props.status || 'Статуса нема'}</div>\r\n*/}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React, {useState} from 'react'\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i =1; i<= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n     return <div className={s.paginator}>\r\n        <button disabled={portionNumber <= 1} onClick={() => { setPortionNumber(portionNumber - 1) }}>Предыдущие</button>\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        <button disabled={portionCount <= portionNumber} onClick={() => { setPortionNumber(portionNumber + 1) }}>Следующие</button>\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css'\r\n\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport User from \"./User\";\r\nimport Paginator from \"../../../common/Paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n\r\n\r\n    let fUser = (id) => {\r\n        props.followUserThunk(id);\r\n    };\r\n    let unfUser = (id) => {\r\n    props.unfollowUserThunk(id)\r\n    };\r\n   let onPageChanged = (pageNumber) => {\r\n        props.onPageChangedThunk(pageNumber, props.pageSize)\r\n    };\r\n\r\n    return (\r\n        <div className={s.content}>\r\n\r\n            { props.isFetching ? <Preloader/>\r\n            : <div>\r\n                    <Paginator currentPage={props.currentPage} onPageChanged={onPageChanged}\r\n                               totalItemsCount={props.totalItemsCount} pageSize={props.pageSize}/>\r\n                    {props.users.map(u =>\r\n                        <User u={u} Disabled={props.Disabled} unfUser={unfUser} fUser={fUser} key={u.id} status={u.status} />\r\n                       /* <div>\r\n                            <NavLink to={\"/profile/\" + u.id}>\r\n                            {u.name}\r\n                            <div><img\r\n                                src={!u.photos.large ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1200px-VK.com-logo.svg.png' : u.photos.large}\r\n                                alt={u.name}/></div>\r\n                            </NavLink>\r\n                            {u.followed\r\n                                ? <button disabled={props.Disabled.some(id => id === u.id)}\r\n                                    onClick={() => unfUser(u.id) }> Отписаться </button>\r\n                                : <button disabled={props.Disabled.some(id => id === u.id)}\r\n                                    onClick={ () => fUser(u.id) }> Подписаться </button>}\r\n                        </div>*/\r\n                    )\r\n                    }\r\n                </div>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.UsersPageReducer.users;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPageReducer.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPageReducer.totalUsers\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPageReducer.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPageReducer.isFetching;\r\n};\r\nexport const getDisabled = (state) => {\r\n    return state.UsersPageReducer.isDisabled;\r\n};\r\nexport const getStatusThunk = (state) => {\r\n    return state.ProfilePageReducer.status;\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport React from \"react\"\r\nimport Users from \"./Users\";\r\nimport {\r\n    followUserThunk, getUserAC,\r\n   onPageChangedThunk,\r\n    unfollowUserThunk\r\n} from \"../../../Redux/Reducers/UsersReducer\";\r\nimport {userAPI} from \"./../../../api/api\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getDisabled,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../../Redux/Reducers/usersSelectors\";\r\nimport {getStatusThunk} from \"../../../Redux/Reducers/ProfileReducer\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n            this.props.getUserAC(this.props.currentPage, this.props.pageSize);\r\n            };\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUsers/this.props.pageSize);\r\n        let pages = [];\r\n        for (let i =1; i<= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n        return (\r\n             <Users {...this.props}  pages={pages} followUser={userAPI.followUser} unfollowUser={userAPI.unfollowUser}\r\n                    currentPage={this.props.currentPage} totalItemsCount={this.props.totalUsers} pageSize={this.props.pageSize}/>\r\n            )\r\n\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.UsersPageReducer.users,\r\n        pageSize: state.UsersPageReducer.pageSize,\r\n        totalUsers: state.UsersPageReducer.totalUsers,\r\n        currentPage:state.UsersPageReducer.currentPage,\r\n        isFetching: state.UsersPageReducer.isFetching,\r\n        Disabled:state.UsersPageReducer.isDisabled,\r\n\r\n    }\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        Disabled:getDisabled(state),\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserAC,\r\n        followUserThunk,\r\n        unfollowUserThunk,\r\n        onPageChangedThunk,\r\n            getStatusThunk,\r\n    }\r\n    ),\r\n    withAuthRedirect,\r\n)(UsersContainer)\r\n\r\n/*\r\nexport default withAuthRedirect(connect(mapStateToProps, {\r\n    getUserAC,\r\n    followUserThunk,\r\n    unfollowUserThunk,\r\n    onPageChangedThunk,\r\n    }\r\n)(UsersContainer));*/\r\n","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n    if (!props.profilePage) {\r\n        return <div>   </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <header className={s.header}>\r\n\r\n            <NavLink to=\"/profile\" activeClassName={s.active} >Моя страница</NavLink>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active} >Сообщения</NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active} >Пользователи</NavLink>\r\n\r\n           {props.isAuth\r\n               ? <div className={s.auth}>{props.login} <img src={!props.profilePage.photos.large\r\n                   ? 'https://avatars.yandex.net/get-music-content/175191/f26e7e1a.p.5821649/m1000x1000'\r\n                   : props.profilePage.photos.large} alt=\"\"/> <NavLink to={\"/login\"} onClick={props.logout}>Выйти</NavLink>\r\n\r\n           </div>\r\n               : <div className={s.auth}><NavLink className={s.logout} to={'/login'}>Войдите</NavLink></div> }\r\n\r\n        </header>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\nimport {isFetching} from \"./UsersReducer\";\r\n\r\nconst SET_HELLO ='SET_HELLO';\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst LOGOUT = 'LOGOUT';\r\n\r\nexport type InitialStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    password: null | string\r\n    rememberMe: boolean | null\r\n    hello: false\r\n}\r\nlet initialState:InitialStateType = {\r\n    id:null,\r\n    email:null,\r\n    login:null,\r\n    isAuth:false,\r\n    password:null,\r\n    rememberMe:null,\r\n    hello: false\r\n};\r\n\r\nconst AuthPageReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_HELLO:\r\n            return  {\r\n                ...state,\r\n                hello: action.bool\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuth:false,\r\n                login:null,\r\n            };\r\n        default: return state\r\n    }\r\n};\r\n\r\ntype LogoutACType = {\r\n    type: typeof LOGOUT\r\n}\r\n\r\nexport const logoutAC = ():LogoutACType => ({type: LOGOUT})\r\n\r\n\r\ntype ActionPayloadType = {\r\n    id: number | null\r\n    email:string | null\r\n    login:string | null\r\n    isAuth:boolean\r\n}\r\n\r\ntype SetUserDataActionType = {\r\n    type: typeof SET_USER_DATA\r\n    payload:ActionPayloadType\r\n}\r\n\r\nexport const setUserData = (id: number | null, email:string | null, login:string | null, isAuth:boolean): SetUserDataActionType =>\r\n    ({type:SET_USER_DATA, payload:{id, email, login, isAuth} });\r\n\r\nexport const setDataLoginThunk = (email:any, password:any) => async (dispatch: any) => {\r\n        dispatch(isFetching(true))\r\n        let response = await authAPI.login(email, password, );\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(authmeThunk())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Ошибка\"\r\n                dispatch(stopSubmit(\"login\", {_error:message }))\r\n            }\r\n            dispatch(isFetching(false))\r\n    };\r\n\r\n\r\nexport const authmeThunk = () => async (dispatch: any) => {\r\n    let response = await  authAPI.authme();\r\n    if (response.resultCode === 0) {\r\n                dispatch(setUserData(response.data.id, response.data.email, response.data.login , true))\r\n            }\r\n\r\n\r\n};\r\n\r\nexport const logout = (bool: any) => async (dispatch: any) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0){\r\n            dispatch(setUserData(null, null, null, false))\r\n        }\r\n            };\r\n\r\n\r\n\r\nexport default AuthPageReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout, logoutAC, setUserData} from \"../../Redux/Reducers/AuthReducer\";\r\nimport {setPhotoUser} from \"../../Redux/Reducers/ProfileReducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n/*\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.isAuth != prevProps.isAuth ) {\r\n            alert('hello');\r\n        }\r\n    }\r\n*/\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}  />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login:state.AuthPageReducer.login,\r\n        profilePage:state.ProfilePageReducer.profile,\r\n        isAuth:state.AuthPageReducer.isAuth,\r\n    }\r\n};\r\n\r\nexport default compose(\r\nconnect(mapStateToProps, {\r\n    setUserData,\r\n    setPhotoUser,\r\n    logoutAC,\r\n    //authmeThunk,\r\n    logout,}),\r\n    withRouter,\r\n    )(HeaderContainer);","import React from 'react';\r\nimport s from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDataLoginThunk} from \"../../../Redux/Reducers/AuthReducer\";\r\n/*\r\nimport {Input} from \"../../../common/FormConrols/FormsControls\";\r\n*/\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../../../common/FormConrols/FormsControls.module.css\"\r\nimport Preloader from \"../../../common/Preloader\";\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n\r\n/*    const onSubmit = (formData) => {\r\n        props.setDataLoginThunk(formData.Login, formData.Password);\r\n        console.log(formData.Password)\r\n    };*/\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n/*    if (props.isFetching) {\r\n        return <Preloader/>\r\n    }*/\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <div className={s.main}>\r\n                <div className={s.block}>\r\n                    <div className={s.wrapper}>\r\n                        <div className={s.flex}>\r\n                            <h1>Авторизация</h1>\r\n                        </div>\r\n                        <NormalLoginForm\r\n                            isFetching={props.isFetching}\r\n                            setDataLoginThunk={props.setDataLoginThunk} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst NormalLoginForm = (props) => {\r\n    console.log(props)\r\n    const onFinish = (values) => {\r\n        props.setDataLoginThunk(values.username, values.password)\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Логин\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <a className=\"login-form-forgot\" href=\"\">\r\n                    Forgot password\r\n                </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                {!!props.isFetching &&\r\n                <Button loading type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Войти\r\n                </Button>}\r\n                {!props.isFetching &&\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Войти\r\n                </Button>\r\n                }\r\n                Or <a href=\"\">register now!</a>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n/*\r\nconst LoginForm = (props) => {\r\n    return (\r\n        /!*<div className={s.background}>\r\n            <div className={s.box}>\r\n                <h1>Авторизация</h1>\r\n\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <div className={s.inputBlock}>\r\n                        <Field className={s.auth} placeholder='login' name={\"Login\"} component={Input}\r\n                               validate={[required]}/>\r\n                        <label className={s.label} >Login</label>\r\n\r\n                    </div>\r\n                    <div className={s.inputBlock}>\r\n                        <Field className={s.auth} placeholder='password' name={\"Password\"} type={\"password\"} component={Input}\r\n                               validate={[required]} />\r\n                        <label className={s.label} >Пароль</label>\r\n\r\n                    </div>\r\n\r\n                    { props.error && <div className={style.formSummaryError}>\r\n                        {props.error}\r\n                    </div>}\r\n                    <div className={s.btn}><button> Войти в акаунт </button></div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>*!/\r\n\r\n        <div className={s.wrapper}>\r\n        <div className={s.main}>\r\n        <h1 className={s.authorization}>Авторизация</h1>\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div className={s.field}>\r\n            <Field id=\"login\" name={\"Login\"} component={Input}\r\n                   validate={[required]} text={'login'}/>\r\n        </div>\r\n        <div className={s.field}>\r\n            <Field id=\"passwd\" name={\"Password\"} type={\"password\"} component={Input}\r\n                   validate={[required]} text={'password'} />\r\n        </div>\r\n        <div className={s.btn}><button> Войти в акаунт </button></div>\r\n    </form>\r\n    </div>\r\n\r\n</div>\r\n    )\r\n};\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);*/\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.AuthPageReducer.isAuth,\r\n    isFetching: state.UsersPageReducer.isFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, {setDataLoginThunk})(Login);","import {authmeThunk} from \"./AuthReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState:InitialStateType = {\r\n    initialized: false,\r\n};\r\n\r\nconst AppReducer = (state = initialState, action: any):InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n};\r\n\r\ntype SetInitializedActionType = {\r\n    type: typeof SET_INITIALIZED\r\n}\r\n\r\nconst setInitialized = ():SetInitializedActionType => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n        let promise = dispatch(authmeThunk());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(setInitialized())\r\n        })\r\n};\r\n\r\n\r\nexport default AppReducer;","import React from 'react';\nimport './App.css';\nimport Footer from \"./Component/Footer/Footer\";\nimport Dialogs from \"./Component/Main/Dialogs/Dialogs\";\nimport {Route} from \"react-router-dom\";\n\nimport MainContainer from \"./Component/Main/Main/MainContainer\";\nimport UsersContainer from \"./Component/Main/Users/UsersContainer\";\nimport HeaderContainer from \"./Component/Header/HeaderContaine\";\nimport Login from \"./Component/Main/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./Redux/Reducers/AppReducer\";\nimport Preloader from \"./common/Preloader\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return  <Preloader/>\n        }\n\n        return (\n            <div className={\"App\"}>\n\n\n\n\n                <HeaderContainer />\n\n                <Route path='/profile/:userID?' render={() => <MainContainer/>}/>\n                <Route path=\"/dialogs/:userID?\" component={Dialogs}/>\n                <Route path=\"/users\" component={UsersContainer}/>\n                <Route path=\"/login\" component={Login}/>\n\n                <Footer/>\n\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized:state.AppReducer.initialized,\n    }\n};\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport ProfilePageReducer from \"./Reducers/ProfileReducer\";\r\nimport UsersPageReducer from \"./Reducers/UsersReducer\";\r\nimport AuthPageReducer from \"./Reducers/AuthReducer\";\r\nimport { reducer as formReducer  } from  \"redux-form\"\r\nimport AppReducer from \"./Reducers/AppReducer\";\r\nimport dialogsReducer from \"./Reducers/DialogReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePageReducer,\r\n    UsersPageReducer,\r\n    AuthPageReducer,\r\n    form:formReducer,\r\n    AppReducer,\r\n    dialogsReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/ReduxStore\"\n\n\n\n //let rerenderEntireTree = (state) => {\n     ReactDOM.render(\n\n         <React.StrictMode>\n             <BrowserRouter>\n                 <Provider store={store} >\n                     <App  />\n                 </Provider>\n             </BrowserRouter>\n         </React.StrictMode>,\n         document.getElementById('root')\n     );\n //};\n\n//rerenderEntireTree(store.getState());\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__3Bs3o\",\"ava\":\"Main_ava__1o9-r\",\"me\":\"Main_me__3UC4q\",\"posts\":\"Main_posts__lOreb\",\"input\":\"Main_input__1jIeW\",\"btn\":\"Main_btn__1fyob\",\"zero\":\"Main_zero__1nHyy\",\"form\":\"Main_form__2CQT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1dvtT\",\"img\":\"Footer_img__1lQzi\",\"imgMessages\":\"Footer_imgMessages__1ACES\",\"active\":\"Footer_active__1A6_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__318n1\",\"active\":\"Header_active__1tsaU\",\"auth\":\"Header_auth__2-Am-\",\"logout\":\"Header_logout__17PEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"me\":\"Me_me__mJ2AC\",\"nameme\":\"Me_nameme__3nqDB\",\"pr\":\"Me_pr__xubHo\",\"nameP\":\"Me_nameP__2ronn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2V2IF\",\"postArea\":\"Post_postArea__3QaqU\",\"postName\":\"Post_postName__3RciP\",\"postText\":\"Post_postText__1qnie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__3b2oG\",\"block\":\"Login_block__1lTrk\",\"wrapper\":\"Login_wrapper__3zPaA\",\"flex\":\"Login_flex__1bA-_\"};"],"sourceRoot":""}